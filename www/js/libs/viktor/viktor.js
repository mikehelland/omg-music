/*

This is the Viktor NV1 synth engine, found here:

https://nicroto.github.io/viktor/

I hacked together pieces from a few repos of his:

https://github.com/nicroto/viktor
https://github.com/nicroto/viktor-nv1-engine
https://github.com/nicroto/viktor-nv1-settings-convertor

*/


'use strict';

var SEMITONE_CENTS = 100;

var CONST = {

	ENGINE_VERSION: 6,

	RANGE_LIBRARY: {
		// ENGINE_VERSION_1

		ENGINE_VERSION_2: {
			"daw": {
				"pitch": {
					"bend": [-200, 200]
				},
				"modulation": {
					"rate": [0, 15]
				},
				"delay": {
					"time": [0, 1000],
					"feedback": [0, 0.9],
					"dry": [0, 1],
					"wet": [0, 1]
				},
				"reverb": {
					"level": [0, 1]
				},
				"masterVolume": {
					"level": [0, 1]
				}
			},
			"instruments": {
				"synth": {
					"modulation": {
						"waveform": [0, 5],
						"portamento": [0, 0.16666666666666666],
						"rate": [0, 15]
					},
					"oscillator": {
						"osc1": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						},
						"osc2": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						},
						"osc3": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						}
					},
					"mixer": {
						"volume1": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume2": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume3": {
							"enabled": [0, 1],
							"level": [0, 1]
						}
					},
					"noise": {
						"enabled": [0, 1],
						"level": [0, 1],
						"type": [0, 2]
					},
					"envelopes": {
						"primary": {
							"attack": [0, 2],
							"decay": [0.002, 2],
							"sustain": [0, 1],
							"release": [0, 2]
						},
						"filter": {
							"attack": [0, 2],
							"decay": [0, 2],
							"sustain": [0.001, 1],
							"release": [0, 2]
						}
					},
					"filter": {
						"cutoff": [0, 8000],
						"emphasis": [0.4, 40],
						"envAmount": [0, 1]
					},
					"lfo": {
						"waveform": [0, 5],
						"rate": [1, 25],
						"amount": [0, 1]
					},
					"pitch": {
						"bend": [-200, 200]
					}
				}
			}
		},

		ENGINE_VERSION_3: {
			"daw": {
				"pitch": {
					"bend": [-200, 200]
				},
				"modulation": {
					"rate": [0, 15]
				},
				"delay": {
					"time": [0, 1000],
					"feedback": [0, 0.9],
					"dry": [0, 1],
					"wet": [0, 1]
				},
				"reverb": {
					"level": [0, 1]
				},
				"masterVolume": {
					"level": [0, 1]
				}
			},
			"instruments": {
				"synth": {
					"polyphony": {
						"voiceCount": [1, 10]
					},
					"modulation": {
						"waveform": [0, 5],
						"portamento": [0, 0.16666666666666666],
						"rate": [0, 15]
					},
					"oscillator": {
						"osc1": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						},
						"osc2": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						},
						"osc3": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						}
					},
					"mixer": {
						"volume1": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume2": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume3": {
							"enabled": [0, 1],
							"level": [0, 1]
						}
					},
					"noise": {
						"enabled": [0, 1],
						"level": [0, 1],
						"type": [0, 2]
					},
					"envelopes": {
						"primary": {
							"attack": [0, 2],
							"decay": [0.002, 2],
							"sustain": [0, 1],
							"release": [0, 2]
						},
						"filter": {
							"attack": [0, 2],
							"decay": [0, 2],
							"sustain": [0.001, 1],
							"release": [0, 2]
						}
					},
					"filter": {
						"cutoff": [0, 8000],
						"emphasis": [0.4, 40],
						"envAmount": [0, 1]
					},
					"lfo": {
						"waveform": [0, 5],
						"rate": [1, 25],
						"amount": [0, 1]
					},
					"pitch": {
						"bend": [-200, 200]
					}
				}
			}
		},

		ENGINE_VERSION_4: {
			"daw": {
				"pitch": {
					"bend": [-200, 200]
				},
				"modulation": {
					"rate": [0, 15]
				},
				"delay": {
					"time": [0, 1000],
					"feedback": [0, 0.9],
					"dry": [0, 1],
					"wet": [0, 1]
				},
				"reverb": {
					"level": [0, 1]
				},
				"masterVolume": {
					"level": [0, 1]
				}
			},
			"instruments": {
				"synth": {
					"polyphony": {
						"voiceCount": [1, 10],
						"sustain": [0, 1]
					},
					"modulation": {
						"waveform": [0, 5],
						"portamento": [0, 0.16666666666666666],
						"rate": [0, 15]
					},
					"oscillator": {
						"osc1": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						},
						"osc2": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						},
						"osc3": {
							"range": [-4, 2],
							"fineDetune": [-8, 8],
							"waveform": [0, 5]
						}
					},
					"mixer": {
						"volume1": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume2": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume3": {
							"enabled": [0, 1],
							"level": [0, 1]
						}
					},
					"noise": {
						"enabled": [0, 1],
						"level": [0, 1],
						"type": [0, 2]
					},
					"envelopes": {
						"primary": {
							"attack": [0, 2],
							"decay": [0.002, 2],
							"sustain": [0, 1],
							"release": [0, 2]
						},
						"filter": {
							"attack": [0, 2],
							"decay": [0, 2],
							"sustain": [0.001, 1],
							"release": [0, 2]
						}
					},
					"filter": {
						"cutoff": [0, 8000],
						"emphasis": [0.4, 40],
						"envAmount": [0, 1]
					},
					"lfo": {
						"waveform": [0, 5],
						"rate": [1, 25],
						"amount": [0, 1]
					},
					"pitch": {
						"bend": [-200, 200]
					}
				}
			}
		},

		ENGINE_VERSION_5: {
			"daw": {
				"pitch": {
					"bend": [-200, 200]
				},
				"modulation": {
					"rate": [0, 15]
				},
				"delay": {
					"time": [0, 1000],
					"feedback": [0, 0.9],
					"dry": [0, 1],
					"wet": [0, 1]
				},
				"reverb": {
					"level": [0, 1]
				},
				"masterVolume": {
					"level": [0, 1]
				}
			},
			"instruments": {
				"synth": {
					"polyphony": {
						"voiceCount": [1, 10],
						"sustain": [0, 1]
					},
					"modulation": {
						"waveform": [0, 5],
						"portamento": [0, 0.16666666666666666],
						"rate": [0, 15]
					},
					"oscillator": {
						"osc1": {
							"range": [-4, 2],
							"fineDetune": [-800, 800],
							"waveform": [0, 5]
						},
						"osc2": {
							"range": [-4, 2],
							"fineDetune": [-800, 800],
							"waveform": [0, 5]
						},
						"osc3": {
							"range": [-4, 2],
							"fineDetune": [-800, 800],
							"waveform": [0, 5]
						}
					},
					"mixer": {
						"volume1": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume2": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume3": {
							"enabled": [0, 1],
							"level": [0, 1]
						}
					},
					"noise": {
						"enabled": [0, 1],
						"level": [0, 1],
						"type": [0, 2]
					},
					"envelopes": {
						"primary": {
							"attack": [0, 2],
							"decay": [0.002, 2],
							"sustain": [0, 1],
							"release": [0, 2]
						},
						"filter": {
							"attack": [0, 2],
							"decay": [0, 2],
							"sustain": [0.001, 1],
							"release": [0, 2]
						}
					},
					"filter": {
						"cutoff": [0, 8000],
						"emphasis": [0.4, 40],
						"envAmount": [0, 1]
					},
					"lfo": {
						"waveform": [0, 5],
						"rate": [1, 25],
						"amount": [0, 1]
					},
					"pitch": {
						"bend": [-200, 200]
					}
				}
			}
		},

		ENGINE_VERSION_6: {
			"daw": {
				"pitch": {
					"bend": [-200, 200]
				},
				"modulation": {
					"rate": [0, 15]
				},
				"compressor": {
					"threshold": [-60, 0],
					"ratio": [1, 20],
					"knee": [0, 20],
					"attack": [0.01, 1000],
					"release": [0.1, 1000],
					"makeupGain": [0, 10],
					"enabled": [0, 1]
				},
				"delay": {
					"time": [0, 1000],
					"feedback": [0, 0.9],
					"dry": [0, 1],
					"wet": [0, 1]
				},
				"reverb": {
					"level": [0, 1]
				},
				"masterVolume": {
					"level": [0, 1]
				}
			},
			"instruments": {
				"synth": {
					"polyphony": {
						"voiceCount": [1, 10],
						"sustain": [0, 1]
					},
					"modulation": {
						"waveform": [0, 5],
						"portamento": [0, 0.16666666666666666],
						"rate": [0, 15]
					},
					"oscillator": {
						"osc1": {
							"range": [-4, 2],
							"fineDetune": [-800, 800],
							"waveform": [0, 5]
						},
						"osc2": {
							"range": [-4, 2],
							"fineDetune": [-800, 800],
							"waveform": [0, 5]
						},
						"osc3": {
							"range": [-4, 2],
							"fineDetune": [-800, 800],
							"waveform": [0, 5]
						}
					},
					"mixer": {
						"volume1": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume2": {
							"enabled": [0, 1],
							"level": [0, 1]
						},
						"volume3": {
							"enabled": [0, 1],
							"level": [0, 1]
						}
					},
					"noise": {
						"enabled": [0, 1],
						"level": [0, 1],
						"type": [0, 2]
					},
					"envelopes": {
						"primary": {
							"attack": [0, 2],
							"decay": [0.002, 2],
							"sustain": [0, 1],
							"release": [0, 2]
						},
						"filter": {
							"attack": [0, 2],
							"decay": [0, 2],
							"sustain": [0.001, 1],
							"release": [0, 2]
						}
					},
					"filter": {
						"cutoff": [0, 8000],
						"emphasis": [0.4, 40],
						"envAmount": [0, 1]
					},
					"lfo": {
						"waveform": [0, 5],
						"rate": [1, 25],
						"amount": [0, 1]
					},
					"pitch": {
						"bend": [-200, 200]
					}
				}
			}
		}
	},

	DEFAULT_PITCH_SETTINGS: {
		bend: {
			value: 0,
			range: [ -200, 200 ]
		}
	},
	DEFAULT_MODULATION_SETTINGS: {
		rate: {
			value: 0,
			range: [ 0, 15 ]
		}
	},
	DEFAULT_COMPRESSOR_SETTINGS: {
		threshold: {
			value: -20,
			range: [ -60, 0 ]
		},
		ratio: {
			value: 3,
			range: [ 1, 20 ]
		},
		knee: {
			value: 2,
			range: [ 0, 20 ]
		},
		attack: {
			value: 0.1,
			range: [ 0.01, 1000 ]
		},
		release: {
			value: 20,
			range: [ 0.1, 1000 ]
		},
		makeupGain: {
			value: 0,
			range: [ 0, 10 ]
		},
		enabled: {
			value: 0,
			range: [ 0, 1 ]
		}
	},
	DEFAULT_DELAY_SETTINGS: {
		time: {
			value: 150,
			range: [ 0, 1000 ]
		},
		feedback: {
			value: 0.3,
			range: [ 0, 0.9 ]
		},
		dry: {
			value: 1,
			range: [ 0, 1 ]
		},
		wet: {
			value: 0,
			range: [ 0, 1 ]
		}
	},
	DEFAULT_REVERB_SETTINGS: {
		level: {
			value: 0,
			range: [ 0, 1 ]
		}
	},
	DEFAULT_MASTER_VOLUME_SETTINGS: {
		level: {
			value: 0.8,
			range: [ 0, 1 ]
		}
	},

	TUNA_COMPRESSOR_DEFAULT_SETTINGS: {
		threshold: -20,
		ratio: 3,
		knee: 3,
		attack: 0.1,
		release: 20,
		makeupGain: 0,
		automakeup: false,
		bypass: true
	},
	TUNA_DELAY_DEFAULT_SETTINGS: {
		feedback: 0.45,
		delayTime: 150,
		wetLevel: 0.25,
		dryLevel: 1,
		cutoff: 2000,
		bypass: 0
	},
	TUNA_REVERB_DEFAULT_SETTINGS: {
		highCut: 22050,
		lowCut: 20,
		dryLevel: 1,
		wetLevel: 0,
		level: 1,
		impulse: "impulses/impulse_rev.wav",
		bypass: 0
	},


	OSC_WAVEFORM: [
		"sine",
		"square",
		"sawtooth",
		"triangle",
		"Warm Triangle",
		"TB303 Square"
	],
	CUSTOM_WAVEFORMS: [
		{
			name: "Warm Triangle",
			fft: { "real": [0.000000,0.636620,-0.000000,0.212207,-0.000000,0.127324,-0.000000,0.090946,-0.000000,0.070736,-0.000000,0.057875,-0.000000,0.048971,-0.000000,0.042441,-0.000000,0.037448,-0.000000,0.033506,-0.000000,0.030315,-0.000000,0.027679,-0.000000,0.025465,0.000000,0.023579,-0.000000,0.021952,-0.000000,0.020536,-0.000000,0.019292,0.000000,0.018189,-0.000000,0.017206,-0.000000,0.016324,-0.000000,0.015527,0.000000,0.014805,-0.000000,0.014147,-0.000000,0.013545,-0.000000,0.012992,0.000000,0.012483,0.000000,0.012012,-0.000000,0.011575,-0.000000,0.011169,0.000000,0.010790,-0.000000,0.010436,-0.000000,0.010105,-0.000000,0.009794,-0.000000,0.009502,0.000000,0.009226,-0.000000,0.008966,-0.000000,0.008721,-0.000000,0.008488,-0.000000,0.008268,-0.000000,0.008058,-0.000000,0.007860,-0.000000,0.007670,0.000000,0.007490,-0.000000,0.007317,-0.000000,0.007153,-0.000000,0.006996,-0.000000,0.006845,0.000000,0.006701,-0.000000,0.006563,-0.000000,0.006431,0.000000,0.006303,-0.000000,0.006181,0.000000,0.006063,-0.000000,0.005950,-0.000000,0.005841,0.000000,0.005735,-0.000000,0.005634,-0.000000,0.005536,0.000000,0.005441,-0.000000,0.005350,-0.000000,0.005261,-0.000000,0.005176,-0.000000,0.005093,0.000000,0.005013,-0.000000,0.004935,-0.000000,0.004860,-0.000000,0.004787,-0.000000,0.004716,0.000000,0.004647,-0.000000,0.004580,-0.000000,0.004515,0.000000,0.004452,-0.000000,0.004390,-0.000000,0.004331,-0.000000,0.004273,-0.000000,0.004216,-0.000000,0.004161,-0.000000,0.004107,-0.000000,0.004055,0.000000,0.004004,-0.000000,0.003954,-0.000000,0.003906,-0.000000,0.003858,0.000000,0.003812,0.000000,0.003767,-0.000000,0.003723,-0.000000,0.003680,-0.000000,0.003638,-0.000000,0.003597,0.000000,0.003557,-0.000000,0.003517,-0.000000,0.003479,-0.000000,0.003441,-0.000000,0.003404,0.000000,0.003368,-0.000000,0.003333,-0.000000,0.003299,-0.000000,0.003265,-0.000000,0.003232,0.000000,0.003199,0.000000,0.003167,-0.000000,0.003136,-0.000000,0.003105,-0.000000,0.003075,0.000000,0.003046,0.000000,0.003017,-0.000000,0.002989,-0.000000,0.002961,-0.000000,0.002934,-0.000000,0.002907,0.000000,0.002881,-0.000000,0.002855,-0.000000,0.002829,-0.000000,0.002804,-0.000000,0.002780,0.000000,0.002756,0.000000,0.002732,-0.000000,0.002709,-0.000000,0.002686,-0.000000,0.002664,-0.000000,0.002642,0.000000,0.002620,-0.000000,0.002598,-0.000000,0.002577,-0.000000,0.002557,-0.000000,0.002536,0.000000,0.002516,-0.000000,0.002497,-0.000000,0.002477,-0.000000,0.002458,-0.000000,0.002439,0.000000,0.002421,-0.000000,0.002402,-0.000000,0.002384,-0.000000,0.002367,-0.000000,0.002349,0.000000,0.002332,0.000000,0.002315,-0.000000,0.002298,-0.000000,0.002282,-0.000000,0.002266,-0.000000,0.002250,0.000000,0.002234,-0.000000,0.002218,-0.000000,0.002203,-0.000000,0.002188,-0.000000,0.002173,0.000000,0.002158,-0.000000,0.002144,-0.000000,0.002129,-0.000000,0.002115,-0.000000,0.002101,-0.000000,0.002087,-0.000000,0.002074,-0.000000,0.002060,-0.000000,0.002047,-0.000000,0.002034,-0.000000,0.002021,0.000000,0.002008,-0.000000,0.001996,-0.000000,0.001983,-0.000000,0.001971,-0.000000,0.001959,-0.000000,0.001947,-0.000000,0.001935,-0.000000,0.001923,0.000000,0.001912,0.000000,0.001900,0.000000,0.001889,-0.000000,0.001878,-0.000000,0.001867,-0.000000,0.001856,-0.000000,0.001845,-0.000000,0.001835,-0.000000,0.001824,-0.000000,0.001814,-0.000000,0.001803,0.000000,0.001793,0.000000,0.001783,0.000000,0.001773,-0.000000,0.001763,-0.000000,0.001754,-0.000000,0.001744,-0.000000,0.001735,-0.000000,0.001725,-0.000000,0.001716,-0.000000,0.001707,0.000000,0.001698,0.000000,0.001689,0.000000,0.001680,-0.000000,0.001671,-0.000000,0.001662,-0.000000,0.001654,-0.000000,0.001645,-0.000000,0.001637,-0.000000,0.001628,-0.000000,0.001620,-0.000000,0.001612,0.000000,0.001604,0.000000,0.001596,0.000000,0.001588,-0.000000,0.001580,-0.000000,0.001572,-0.000000,0.001564,-0.000000,0.001557,-0.000000,0.001549,-0.000000,0.001541,-0.000000,0.001534,0.000000,0.001527,0.000000,0.001519,0.000000,0.001512,-0.000000,0.001505,-0.000000,0.001498,-0.000000,0.001491,-0.000000,0.001484,-0.000000,0.001477,-0.000000,0.001470,-0.000000,0.001463,-0.000000,0.001457,0.000000,0.001450,0.000000,0.001444,0.000000,0.001437,-0.000000,0.001431,-0.000000,0.001424,-0.000000,0.001418,-0.000000,0.001412,-0.000000,0.001405,-0.000000,0.001399,-0.000000,0.001393,-0.000000,0.001387,0.000000,0.001381,0.000000,0.001375,0.000000,0.001369,-0.000000,0.001363,-0.000000,0.001357,-0.000000,0.001352,-0.000000,0.001346,-0.000000,0.001340,-0.000000,0.001335,-0.000000,0.001329,-0.000000,0.001324,0.000000,0.001318,0.000000,0.001313,-0.000000,0.001307,-0.000000,0.001302,-0.000000,0.001297,-0.000000,0.001291,-0.000000,0.001286,-0.000000,0.001281,-0.000000,0.001276,-0.000000,0.001271,0.000000,0.001266,0.000000,0.001261,0.000000,0.001256,-0.000000,0.001251,-0.000000,0.001246,-0.000000,0.001241,-0.000000,0.001236,-0.000000,0.001231,-0.000000,0.001227,-0.000000,0.001222,-0.000000,0.001217,0.000000,0.001213,0.000000,0.001208,-0.000000,0.001203,-0.000000,0.001199,-0.000000,0.001194,-0.000000,0.001190,-0.000000,0.001186,-0.000000,0.001181,-0.000000,0.001177,-0.000000,0.001172,0.000000,0.001168,0.000000,0.001164,0.000000,0.001160,-0.000000,0.001155,-0.000000,0.001151,-0.000000,0.001147,-0.000000,0.001143,-0.000000,0.001139,-0.000000,0.001135,-0.000000,0.001131,-0.000000,0.001127,0.000000,0.001123,0.000000,0.001119,-0.000000,0.001115,-0.000000,0.001111,-0.000000,0.001107,-0.000000,0.001103,-0.000000,0.001100,-0.000000,0.001096,-0.000000,0.001092,-0.000000,0.001088,-0.000000,0.001085,0.000000,0.001081,0.000000,0.001077,-0.000000,0.001074,-0.000000,0.001070,-0.000000,0.001066,-0.000000,0.001063,-0.000000,0.001059,-0.000000,0.001056,-0.000000,0.001052,-0.000000,0.001049,-0.000000,0.001045,0.000000,0.001042,-0.000000,0.001039,-0.000000,0.001035,-0.000000,0.001032,-0.000000,0.001028,-0.000000,0.001025,-0.000000,0.001022,-0.000000,0.001019,-0.000000,0.001015,-0.000000,0.001012,0.000000,0.001009,0.000000,0.001006,-0.000000,0.001003,-0.000000,0.000999,-0.000000,0.000996,-0.000000,0.000993,-0.000000,0.000990,-0.000000,0.000987,-0.000000,0.000984,-0.000000,0.000981,-0.000000,0.000978,-0.000000,0.000975,-0.000000,0.000972,-0.000000,0.000969,-0.000000,0.000966,-0.000000,0.000963,-0.000000,0.000960,0.000000,0.000957,-0.000000,0.000954,0.000000,0.000952,-0.000000,0.000949,0.000000,0.000946,-0.000000,0.000943,-0.000000,0.000940,-0.000000,0.000938,-0.000000,0.000935,-0.000000,0.000932,-0.000000,0.000929,0.000000,0.000927,-0.000000,0.000924,0.000000,0.000921,-0.000000,0.000919,0.000000,0.000916,-0.000000,0.000913,-0.000000,0.000911,-0.000000,0.000908,-0.000000,0.000906,-0.000000,0.000903,-0.000000,0.000900,0.000000,0.000898,-0.000000,0.000895,0.000000,0.000893,-0.000000,0.000890,0.000000,0.000888,-0.000000,0.000885,-0.000000,0.000883,-0.000000,0.000881,-0.000000,0.000878,0.000000,0.000876,-0.000000,0.000873,0.000000,0.000871,-0.000000,0.000869,0.000000,0.000866,-0.000000,0.000864,0.000000,0.000861,-0.000000,0.000859,-0.000000,0.000857,-0.000000,0.000855,-0.000000,0.000852,0.000000,0.000850,-0.000000,0.000848,0.000000,0.000845,-0.000000,0.000843,0.000000,0.000841,-0.000000,0.000839,-0.000000,0.000837,-0.000000,0.000834,-0.000000,0.000832,-0.000000,0.000830,-0.000000,0.000828,0.000000,0.000826,-0.000000,0.000824,0.000000,0.000821,-0.000000,0.000819,0.000000,0.000817,-0.000000,0.000815,-0.000000,0.000813,-0.000000,0.000811,-0.000000,0.000809,-0.000000,0.000807,-0.000000,0.000805,0.000000,0.000803,-0.000000,0.000801,0.000000,0.000799,-0.000000,0.000797,0.000000,0.000795,-0.000000,0.000793,-0.000000,0.000791,-0.000000,0.000789,-0.000000,0.000787,-0.000000,0.000785,-0.000000,0.000783,0.000000,0.000781,-0.000000,0.000779,0.000000,0.000777,-0.000000,0.000775,0.000000,0.000774,-0.000000,0.000772,-0.000000,0.000770,-0.000000,0.000768,-0.000000,0.000766,0.000000,0.000764,-0.000000,0.000762,0.000000,0.000761,-0.000000,0.000759,0.000000,0.000757,-0.000000,0.000755,-0.000000,0.000753,-0.000000,0.000752,-0.000000,0.000750,-0.000000,0.000748,-0.000000,0.000746,0.000000,0.000745,-0.000000,0.000743,0.000000,0.000741,-0.000000,0.000739,0.000000,0.000738,-0.000000,0.000736,-0.000000,0.000734,-0.000000,0.000733,-0.000000,0.000731,-0.000000,0.000729,-0.000000,0.000728,0.000000,0.000726,-0.000000,0.000724,0.000000,0.000723,-0.000000,0.000721,0.000000,0.000719,-0.000000,0.000718,-0.000000,0.000716,-0.000000,0.000715,-0.000000,0.000713,-0.000000,0.000711,-0.000000,0.000710,0.000000,0.000708,-0.000000,0.000707,0.000000,0.000705,-0.000000,0.000703,0.000000,0.000702,-0.000000,0.000700,-0.000000,0.000699,-0.000000,0.000697,-0.000000,0.000696,-0.000000,0.000694,-0.000000,0.000693,0.000000,0.000691,-0.000000,0.000690,0.000000,0.000688,-0.000000,0.000687,0.000000,0.000685,-0.000000,0.000684,-0.000000,0.000682,-0.000000,0.000681,-0.000000,0.000679,-0.000000,0.000678,-0.000000,0.000677,0.000000,0.000675,-0.000000,0.000674,0.000000,0.000672,-0.000000,0.000671,-0.000000,0.000669,-0.000000,0.000668,-0.000000,0.000667,-0.000000,0.000665,-0.000000,0.000664,-0.000000,0.000662,-0.000000,0.000661,0.000000,0.000660,-0.000000,0.000658,0.000000,0.000657,-0.000000,0.000656,-0.000000,0.000654,-0.000000,0.000653,-0.000000,0.000652,-0.000000,0.000650,-0.000000,0.000649,0.000000,0.000648,-0.000000,0.000646,0.000000,0.000645,-0.000000,0.000644,0.000000,0.000642,-0.000000,0.000641,-0.000000,0.000640,-0.000000,0.000639,-0.000000,0.000637,-0.000000,0.000636,-0.000000,0.000635,0.000000,0.000633,-0.000000,0.000632,0.000000,0.000631,-0.000000,0.000630,0.000000,0.000628,-0.000000,0.000627,-0.000000,0.000626,-0.000000,0.000625,-0.000000,0.000624,-0.000000,0.000622,-0.000000,0.000621,0.000000,0.000620,-0.000000,0.000619,0.000000,0.000617,-0.000000,0.000616,-0.000000,0.000615,-0.000000,0.000614,-0.000000,0.000613,-0.000000,0.000612,-0.000000,0.000610,-0.000000,0.000609,-0.000000,0.000608,0.000000,0.000607,-0.000000,0.000606,0.000000,0.000605,-0.000000,0.000603,-0.000000,0.000602,-0.000000,0.000601,-0.000000,0.000600,-0.000000,0.000599,-0.000000,0.000598,-0.000000,0.000597,-0.000000,0.000596,0.000000,0.000594,-0.000000,0.000593,0.000000,0.000592,-0.000000,0.000591,-0.000000,0.000590,-0.000000,0.000589,-0.000000,0.000588,-0.000000,0.000587,-0.000000,0.000586,0.000000,0.000585,-0.000000,0.000584,0.000000,0.000582,-0.000000,0.000581,0.000000,0.000580,-0.000000,0.000579,-0.000000,0.000578,-0.000000,0.000577,-0.000000,0.000576,-0.000000,0.000575,-0.000000,0.000574,0.000000,0.000573,-0.000000,0.000572,0.000000,0.000571,-0.000000,0.000570,-0.000000,0.000569,-0.000000,0.000568,-0.000000,0.000567,-0.000000,0.000566,-0.000000,0.000565,-0.000000,0.000564,-0.000000,0.000563,0.000000,0.000562,-0.000000,0.000561,0.000000,0.000560,-0.000000,0.000559,-0.000000,0.000558,-0.000000,0.000557,-0.000000,0.000556,-0.000000,0.000555,-0.000000,0.000554,-0.000000,0.000553,-0.000000,0.000552,0.000000,0.000551,-0.000000,0.000550,0.000000,0.000549,-0.000000,0.000548,-0.000000,0.000547,-0.000000,0.000546,-0.000000,0.000546,-0.000000,0.000545,-0.000000,0.000544,-0.000000,0.000543,-0.000000,0.000542,0.000000,0.000541,-0.000000,0.000540,0.000000,0.000539,-0.000000,0.000538,-0.000000,0.000537,-0.000000,0.000536,-0.000000,0.000535,-0.000000,0.000535,-0.000000,0.000534,-0.000000,0.000533,-0.000000,0.000532,0.000000,0.000531,-0.000000,0.000530,0.000000,0.000529,-0.000000,0.000528,-0.000000,0.000527,-0.000000,0.000527,-0.000000,0.000526,-0.000000,0.000525,-0.000000,0.000524,-0.000000,0.000523,-0.000000,0.000522,0.000000,0.000521,-0.000000,0.000521,-0.000000,0.000520,-0.000000,0.000519,-0.000000,0.000518,-0.000000,0.000517,-0.000000,0.000516,-0.000000,0.000515,-0.000000,0.000515,0.000000,0.000514,-0.000000,0.000513,0.000000,0.000512,-0.000000,0.000511,-0.000000,0.000511,-0.000000,0.000510,-0.000000,0.000509,-0.000000,0.000508,-0.000000,0.000507,-0.000000,0.000506,-0.000000,0.000506,0.000000,0.000505,-0.000000,0.000504,0.000000,0.000503,-0.000000,0.000502,-0.000000,0.000502,-0.000000,0.000501,-0.000000,0.000500,-0.000000,0.000499,-0.000000,0.000499,-0.000000,0.000498,-0.000000,0.000497,0.000000,0.000496,-0.000000,0.000495,0.000000,0.000495,-0.000000,0.000494,-0.000000,0.000493,-0.000000,0.000492,-0.000000,0.000492,-0.000000,0.000491,-0.000000,0.000490,-0.000000,0.000489,-0.000000,0.000489,-0.000000,0.000488,0.000000,0.000487,-0.000000,0.000486,-0.000000,0.000486,-0.000000,0.000485,0.000000,0.000484,-0.000000,0.000483,-0.000000,0.000483,-0.000000,0.000482,0.000000,0.000481,-0.000000,0.000480,-0.000000,0.000480,0.000000,0.000479,-0.000000,0.000478,-0.000000,0.000478,-0.000000,0.000477,0.000000,0.000476,-0.000000,0.000475,-0.000000,0.000475,-0.000000,0.000474,0.000000,0.000473,-0.000000,0.000473,-0.000000,0.000472,0.000000,0.000471,-0.000000,0.000471,-0.000000,0.000470,-0.000000,0.000469,0.000000,0.000468,-0.000000,0.000468,-0.000000,0.000467,-0.000000,0.000466,0.000000,0.000466,-0.000000,0.000465,-0.000000,0.000464,0.000000,0.000464,-0.000000,0.000463,-0.000000,0.000462,-0.000000,0.000462,0.000000,0.000461,-0.000000,0.000460,-0.000000,0.000460,-0.000000,0.000459,0.000000,0.000458,-0.000000,0.000458,-0.000000,0.000457,0.000000,0.000456,-0.000000,0.000456,-0.000000,0.000455,-0.000000,0.000454,0.000000,0.000454,-0.000000,0.000453,-0.000000,0.000452,-0.000000,0.000452,0.000000,0.000451,-0.000000,0.000451,-0.000000,0.000450,0.000000,0.000449,-0.000000,0.000449,-0.000000,0.000448,-0.000000,0.000447,0.000000,0.000447,-0.000000,0.000446,-0.000000,0.000446,0.000000,0.000445,0.000000,0.000444,-0.000000,0.000444,-0.000000,0.000443,0.000000,0.000442,-0.000000,0.000442,-0.000000,0.000441,-0.000000,0.000441,0.000000,0.000440,-0.000000,0.000439,-0.000000,0.000439,0.000000,0.000438,0.000000,0.000438,-0.000000,0.000437,-0.000000,0.000436,0.000000,0.000436,-0.000000,0.000435,-0.000000,0.000435,-0.000000,0.000434,0.000000,0.000433,-0.000000,0.000433,-0.000000,0.000432,0.000000,0.000432,0.000000,0.000431,-0.000000,0.000430,-0.000000,0.000430,0.000000,0.000429,-0.000000,0.000429,-0.000000,0.000428,-0.000000,0.000428,0.000000,0.000427,-0.000000,0.000426,-0.000000,0.000426,0.000000,0.000425,-0.000000,0.000425,-0.000000,0.000424,-0.000000,0.000424,0.000000,0.000423,-0.000000,0.000422,-0.000000,0.000422,-0.000000,0.000421,0.000000,0.000421,-0.000000,0.000420,-0.000000,0.000420,0.000000,0.000419,-0.000000,0.000419,-0.000000,0.000418,-0.000000,0.000417,0.000000,0.000417,-0.000000,0.000416,-0.000000,0.000416,-0.000000,0.000415,0.000000,0.000415,-0.000000,0.000414,-0.000000,0.000414,0.000000,0.000413,-0.000000,0.000413,-0.000000,0.000412,-0.000000,0.000412,0.000000,0.000411,-0.000000,0.000410,-0.000000,0.000410,-0.000000,0.000409,0.000000,0.000409,-0.000000,0.000408,-0.000000,0.000408,0.000000,0.000407,-0.000000,0.000407,-0.000000,0.000406,-0.000000,0.000406,0.000000,0.000405,-0.000000,0.000405,-0.000000,0.000404,-0.000000,0.000404,0.000000,0.000403,-0.000000,0.000403,-0.000000,0.000402,0.000000,0.000402,-0.000000,0.000401,-0.000000,0.000401,-0.000000,0.000400,0.000000,0.000400,-0.000000,0.000399,-0.000000,0.000399,-0.000000,0.000398,0.000000,0.000398,-0.000000,0.000397,-0.000000,0.000397,0.000000,0.000396,-0.000000,0.000396,-0.000000,0.000395,-0.000000,0.000395,0.000000,0.000394,-0.000000,0.000394,-0.000000,0.000393,-0.000000,0.000393,0.000000,0.000392,-0.000000,0.000392,-0.000000,0.000391,0.000000,0.000391,-0.000000,0.000390,-0.000000,0.000390,-0.000000,0.000389,0.000000,0.000389,-0.000000,0.000388,-0.000000,0.000388,-0.000000,0.000387,0.000000,0.000387,-0.000000,0.000387,-0.000000,0.000386,0.000000,0.000386,-0.000000,0.000385,-0.000000,0.000385,-0.000000,0.000384,0.000000,0.000384,-0.000000,0.000383,-0.000000,0.000383,0.000000,0.000382,0.000000,0.000382,-0.000000,0.000381,-0.000000,0.000381,0.000000,0.000381,-0.000000,0.000380,-0.000000,0.000380,-0.000000,0.000379,0.000000,0.000379,-0.000000,0.000378,-0.000000,0.000378,0.000000,0.000377,-0.000000,0.000377,-0.000000,0.000376,-0.000000,0.000376,0.000000,0.000376,-0.000000,0.000375,-0.000000,0.000375,-0.000000,0.000374,0.000000,0.000374,-0.000000,0.000373,-0.000000,0.000373,0.000000,0.000373,-0.000000,0.000372,-0.000000,0.000372,-0.000000,0.000371,0.000000,0.000371,-0.000000,0.000370,-0.000000,0.000370,-0.000000,0.000369,0.000000,0.000369,-0.000000,0.000369,-0.000000,0.000368,0.000000,0.000368,-0.000000,0.000367,-0.000000,0.000367,-0.000000,0.000367,0.000000,0.000366,-0.000000,0.000366,-0.000000,0.000365,-0.000000,0.000365,0.000000,0.000364,-0.000000,0.000364,-0.000000,0.000364,0.000000,0.000363,-0.000000,0.000363,-0.000000,0.000362,-0.000000,0.000362,0.000000,0.000362,-0.000000,0.000361,-0.000000,0.000361,-0.000000,0.000360,0.000000,0.000360,-0.000000,0.000359,-0.000000,0.000359,0.000000,0.000359,-0.000000,0.000358,-0.000000,0.000358,-0.000000,0.000357,0.000000,0.000357,-0.000000,0.000357,-0.000000,0.000356,-0.000000,0.000356,0.000000,0.000355,-0.000000,0.000355,-0.000000,0.000355,0.000000,0.000354,-0.000000,0.000354,-0.000000,0.000353,-0.000000,0.000353,0.000000,0.000353,-0.000000,0.000352,-0.000000,0.000352,-0.000000,0.000352,0.000000,0.000351,-0.000000,0.000351,-0.000000,0.000350,0.000000,0.000350,-0.000000,0.000350,-0.000000,0.000349,-0.000000,0.000349,0.000000,0.000348,-0.000000,0.000348,-0.000000,0.000348,-0.000000,0.000347,0.000000,0.000347,-0.000000,0.000347,-0.000000,0.000346,0.000000,0.000346,-0.000000,0.000345,-0.000000,0.000345,-0.000000,0.000345,0.000000,0.000344,-0.000000,0.000344,-0.000000,0.000344,-0.000000,0.000343,0.000000,0.000343,-0.000000,0.000342,-0.000000,0.000342,0.000000,0.000342,-0.000000,0.000341,-0.000000,0.000341,-0.000000,0.000341,0.000000,0.000340,-0.000000,0.000340,-0.000000,0.000340,-0.000000,0.000339,-0.000000,0.000339,-0.000000,0.000338,-0.000000,0.000338,0.000000,0.000338,-0.000000,0.000337,-0.000000,0.000337,-0.000000,0.000337,0.000000,0.000336,-0.000000,0.000336,-0.000000,0.000336,-0.000000,0.000335,-0.000000,0.000335,-0.000000,0.000335,-0.000000,0.000334,0.000000,0.000334,-0.000000,0.000333,-0.000000,0.000333,-0.000000,0.000333,0.000000,0.000332,-0.000000,0.000332,-0.000000,0.000332,-0.000000,0.000331,-0.000000,0.000331,-0.000000,0.000331,-0.000000,0.000330,0.000000,0.000330,-0.000000,0.000330,-0.000000,0.000329,-0.000000,0.000329,0.000000,0.000329,-0.000000,0.000328,-0.000000,0.000328,0.000000,0.000328,-0.000000,0.000327,-0.000000,0.000327,-0.000000,0.000327,0.000000,0.000326,-0.000000,0.000326,-0.000000,0.000326,-0.000000,0.000325,0.000000,0.000325,-0.000000,0.000325,-0.000000,0.000324,0.000000,0.000324,-0.000000,0.000324,-0.000000,0.000323,-0.000000,0.000323,0.000000,0.000323,-0.000000,0.000322,-0.000000,0.000322,-0.000000,0.000322,0.000000,0.000321,-0.000000,0.000321,-0.000000,0.000321,0.000000,0.000320,-0.000000,0.000320,-0.000000,0.000320,-0.000000,0.000319,0.000000,0.000319,-0.000000,0.000319,-0.000000,0.000318,-0.000000,0.000318,0.000000,0.000318,-0.000000,0.000318,-0.000000,0.000317,0.000000,0.000317,-0.000000,0.000317,-0.000000,0.000316,-0.000000,0.000316,0.000000,0.000316,-0.000000,0.000315,-0.000000,0.000315,-0.000000,0.000315,0.000000,0.000314,-0.000000,0.000314,-0.000000,0.000314,0.000000,0.000313,-0.000000,0.000313,-0.000000,0.000313,-0.000000,0.000313,0.000000,0.000312,-0.000000,0.000312,-0.000000,0.000312,-0.000000,0.000311,-0.000000,0.000311,], "imag": [0.000000,-0.636620,-0.000000,-0.212207,-0.000000,-0.127324,-0.000000,-0.090946,-0.000000,-0.070736,-0.000000,-0.057875,-0.000000,-0.048971,-0.000000,-0.042441,-0.000000,-0.037448,-0.000000,-0.033506,-0.000000,-0.030315,-0.000000,-0.027679,-0.000000,-0.025465,-0.000000,-0.023579,-0.000000,-0.021952,-0.000000,-0.020536,-0.000000,-0.019292,-0.000000,-0.018189,-0.000000,-0.017206,-0.000000,-0.016324,-0.000000,-0.015527,-0.000000,-0.014805,-0.000000,-0.014147,-0.000000,-0.013545,-0.000000,-0.012992,-0.000000,-0.012483,-0.000000,-0.012012,-0.000000,-0.011575,-0.000000,-0.011169,-0.000000,-0.010790,-0.000000,-0.010436,-0.000000,-0.010105,-0.000000,-0.009794,-0.000000,-0.009502,-0.000000,-0.009226,-0.000000,-0.008966,-0.000000,-0.008721,-0.000000,-0.008488,-0.000000,-0.008268,-0.000000,-0.008058,-0.000000,-0.007860,-0.000000,-0.007670,-0.000000,-0.007490,-0.000000,-0.007317,-0.000000,-0.007153,-0.000000,-0.006996,-0.000000,-0.006845,-0.000000,-0.006701,-0.000000,-0.006563,-0.000000,-0.006431,-0.000000,-0.006303,-0.000000,-0.006181,-0.000000,-0.006063,-0.000000,-0.005950,-0.000000,-0.005841,-0.000000,-0.005735,-0.000000,-0.005634,-0.000000,-0.005536,-0.000000,-0.005441,-0.000000,-0.005350,-0.000000,-0.005261,-0.000000,-0.005176,-0.000000,-0.005093,-0.000000,-0.005013,-0.000000,-0.004935,-0.000000,-0.004860,-0.000000,-0.004787,-0.000000,-0.004716,-0.000000,-0.004647,-0.000000,-0.004580,-0.000000,-0.004515,-0.000000,-0.004452,-0.000000,-0.004390,-0.000000,-0.004331,-0.000000,-0.004273,-0.000000,-0.004216,-0.000000,-0.004161,-0.000000,-0.004107,-0.000000,-0.004055,-0.000000,-0.004004,-0.000000,-0.003954,-0.000000,-0.003906,-0.000000,-0.003858,-0.000000,-0.003812,-0.000000,-0.003767,-0.000000,-0.003723,-0.000000,-0.003680,-0.000000,-0.003638,-0.000000,-0.003597,-0.000000,-0.003557,-0.000000,-0.003517,-0.000000,-0.003479,-0.000000,-0.003441,-0.000000,-0.003404,-0.000000,-0.003368,-0.000000,-0.003333,-0.000000,-0.003299,-0.000000,-0.003265,-0.000000,-0.003232,-0.000000,-0.003199,-0.000000,-0.003167,-0.000000,-0.003136,-0.000000,-0.003105,-0.000000,-0.003075,-0.000000,-0.003046,-0.000000,-0.003017,-0.000000,-0.002989,-0.000000,-0.002961,-0.000000,-0.002934,-0.000000,-0.002907,-0.000000,-0.002881,-0.000000,-0.002855,-0.000000,-0.002829,-0.000000,-0.002804,-0.000000,-0.002780,-0.000000,-0.002756,-0.000000,-0.002732,-0.000000,-0.002709,-0.000000,-0.002686,-0.000000,-0.002664,-0.000000,-0.002642,-0.000000,-0.002620,-0.000000,-0.002598,-0.000000,-0.002577,-0.000000,-0.002557,-0.000000,-0.002536,-0.000000,-0.002516,-0.000000,-0.002497,-0.000000,-0.002477,-0.000000,-0.002458,-0.000000,-0.002439,-0.000000,-0.002421,-0.000000,-0.002402,-0.000000,-0.002384,-0.000000,-0.002367,-0.000000,-0.002349,-0.000000,-0.002332,-0.000000,-0.002315,-0.000000,-0.002298,-0.000000,-0.002282,-0.000000,-0.002266,-0.000000,-0.002250,-0.000000,-0.002234,-0.000000,-0.002218,-0.000000,-0.002203,-0.000000,-0.002188,-0.000000,-0.002173,-0.000000,-0.002158,-0.000000,-0.002144,-0.000000,-0.002129,-0.000000,-0.002115,-0.000000,-0.002101,-0.000000,-0.002087,-0.000000,-0.002074,-0.000000,-0.002060,-0.000000,-0.002047,-0.000000,-0.002034,-0.000000,-0.002021,-0.000000,-0.002008,-0.000000,-0.001996,-0.000000,-0.001983,-0.000000,-0.001971,-0.000000,-0.001959,-0.000000,-0.001947,-0.000000,-0.001935,-0.000000,-0.001923,-0.000000,-0.001912,-0.000000,-0.001900,-0.000000,-0.001889,-0.000000,-0.001878,-0.000000,-0.001867,-0.000000,-0.001856,-0.000000,-0.001845,-0.000000,-0.001835,-0.000000,-0.001824,-0.000000,-0.001814,-0.000000,-0.001803,-0.000000,-0.001793,-0.000000,-0.001783,-0.000000,-0.001773,-0.000000,-0.001763,-0.000000,-0.001754,-0.000000,-0.001744,-0.000000,-0.001735,-0.000000,-0.001725,-0.000000,-0.001716,-0.000000,-0.001707,-0.000000,-0.001698,-0.000000,-0.001689,-0.000000,-0.001680,-0.000000,-0.001671,-0.000000,-0.001662,-0.000000,-0.001654,-0.000000,-0.001645,-0.000000,-0.001637,-0.000000,-0.001628,-0.000000,-0.001620,-0.000000,-0.001612,-0.000000,-0.001604,-0.000000,-0.001596,-0.000000,-0.001588,-0.000000,-0.001580,-0.000000,-0.001572,-0.000000,-0.001564,-0.000000,-0.001557,-0.000000,-0.001549,-0.000000,-0.001541,-0.000000,-0.001534,-0.000000,-0.001527,-0.000000,-0.001519,-0.000000,-0.001512,-0.000000,-0.001505,-0.000000,-0.001498,-0.000000,-0.001491,-0.000000,-0.001484,-0.000000,-0.001477,-0.000000,-0.001470,-0.000000,-0.001463,-0.000000,-0.001457,-0.000000,-0.001450,-0.000000,-0.001444,-0.000000,-0.001437,-0.000000,-0.001431,-0.000000,-0.001424,-0.000000,-0.001418,-0.000000,-0.001412,-0.000000,-0.001405,-0.000000,-0.001399,-0.000000,-0.001393,-0.000000,-0.001387,-0.000000,-0.001381,-0.000000,-0.001375,-0.000000,-0.001369,-0.000000,-0.001363,-0.000000,-0.001357,-0.000000,-0.001352,-0.000000,-0.001346,-0.000000,-0.001340,-0.000000,-0.001335,-0.000000,-0.001329,-0.000000,-0.001324,-0.000000,-0.001318,-0.000000,-0.001313,-0.000000,-0.001307,-0.000000,-0.001302,-0.000000,-0.001297,-0.000000,-0.001291,-0.000000,-0.001286,-0.000000,-0.001281,-0.000000,-0.001276,-0.000000,-0.001271,-0.000000,-0.001266,-0.000000,-0.001261,-0.000000,-0.001256,-0.000000,-0.001251,-0.000000,-0.001246,-0.000000,-0.001241,-0.000000,-0.001236,-0.000000,-0.001231,-0.000000,-0.001227,-0.000000,-0.001222,-0.000000,-0.001217,-0.000000,-0.001213,-0.000000,-0.001208,-0.000000,-0.001203,-0.000000,-0.001199,-0.000000,-0.001194,-0.000000,-0.001190,-0.000000,-0.001186,-0.000000,-0.001181,-0.000000,-0.001177,-0.000000,-0.001172,-0.000000,-0.001168,-0.000000,-0.001164,-0.000000,-0.001160,-0.000000,-0.001155,-0.000000,-0.001151,-0.000000,-0.001147,-0.000000,-0.001143,-0.000000,-0.001139,-0.000000,-0.001135,-0.000000,-0.001131,-0.000000,-0.001127,-0.000000,-0.001123,-0.000000,-0.001119,-0.000000,-0.001115,-0.000000,-0.001111,-0.000000,-0.001107,-0.000000,-0.001103,-0.000000,-0.001100,-0.000000,-0.001096,-0.000000,-0.001092,-0.000000,-0.001088,-0.000000,-0.001085,-0.000000,-0.001081,-0.000000,-0.001077,-0.000000,-0.001074,-0.000000,-0.001070,-0.000000,-0.001066,-0.000000,-0.001063,-0.000000,-0.001059,-0.000000,-0.001056,-0.000000,-0.001052,-0.000000,-0.001049,-0.000000,-0.001045,-0.000000,-0.001042,-0.000000,-0.001039,-0.000000,-0.001035,-0.000000,-0.001032,-0.000000,-0.001028,-0.000000,-0.001025,-0.000000,-0.001022,-0.000000,-0.001019,-0.000000,-0.001015,-0.000000,-0.001012,-0.000000,-0.001009,-0.000000,-0.001006,-0.000000,-0.001003,-0.000000,-0.000999,-0.000000,-0.000996,-0.000000,-0.000993,-0.000000,-0.000990,-0.000000,-0.000987,-0.000000,-0.000984,-0.000000,-0.000981,-0.000000,-0.000978,-0.000000,-0.000975,-0.000000,-0.000972,-0.000000,-0.000969,-0.000000,-0.000966,-0.000000,-0.000963,-0.000000,-0.000960,-0.000000,-0.000957,-0.000000,-0.000954,-0.000000,-0.000952,-0.000000,-0.000949,-0.000000,-0.000946,-0.000000,-0.000943,-0.000000,-0.000940,-0.000000,-0.000938,-0.000000,-0.000935,-0.000000,-0.000932,-0.000000,-0.000929,-0.000000,-0.000927,-0.000000,-0.000924,-0.000000,-0.000921,-0.000000,-0.000919,-0.000000,-0.000916,-0.000000,-0.000913,-0.000000,-0.000911,-0.000000,-0.000908,-0.000000,-0.000906,-0.000000,-0.000903,-0.000000,-0.000900,-0.000000,-0.000898,-0.000000,-0.000895,-0.000000,-0.000893,-0.000000,-0.000890,-0.000000,-0.000888,-0.000000,-0.000885,-0.000000,-0.000883,-0.000000,-0.000881,-0.000000,-0.000878,-0.000000,-0.000876,-0.000000,-0.000873,-0.000000,-0.000871,-0.000000,-0.000869,-0.000000,-0.000866,-0.000000,-0.000864,-0.000000,-0.000861,-0.000000,-0.000859,-0.000000,-0.000857,-0.000000,-0.000855,-0.000000,-0.000852,-0.000000,-0.000850,-0.000000,-0.000848,-0.000000,-0.000845,-0.000000,-0.000843,-0.000000,-0.000841,-0.000000,-0.000839,-0.000000,-0.000837,-0.000000,-0.000834,-0.000000,-0.000832,-0.000000,-0.000830,-0.000000,-0.000828,-0.000000,-0.000826,-0.000000,-0.000824,-0.000000,-0.000821,-0.000000,-0.000819,-0.000000,-0.000817,-0.000000,-0.000815,-0.000000,-0.000813,-0.000000,-0.000811,-0.000000,-0.000809,-0.000000,-0.000807,-0.000000,-0.000805,-0.000000,-0.000803,-0.000000,-0.000801,-0.000000,-0.000799,-0.000000,-0.000797,-0.000000,-0.000795,-0.000000,-0.000793,-0.000000,-0.000791,-0.000000,-0.000789,-0.000000,-0.000787,-0.000000,-0.000785,-0.000000,-0.000783,-0.000000,-0.000781,-0.000000,-0.000779,-0.000000,-0.000777,-0.000000,-0.000775,-0.000000,-0.000774,-0.000000,-0.000772,-0.000000,-0.000770,-0.000000,-0.000768,-0.000000,-0.000766,-0.000000,-0.000764,-0.000000,-0.000762,-0.000000,-0.000761,-0.000000,-0.000759,-0.000000,-0.000757,-0.000000,-0.000755,-0.000000,-0.000753,-0.000000,-0.000752,-0.000000,-0.000750,-0.000000,-0.000748,-0.000000,-0.000746,-0.000000,-0.000745,-0.000000,-0.000743,-0.000000,-0.000741,-0.000000,-0.000739,-0.000000,-0.000738,-0.000000,-0.000736,-0.000000,-0.000734,-0.000000,-0.000733,-0.000000,-0.000731,-0.000000,-0.000729,-0.000000,-0.000728,-0.000000,-0.000726,-0.000000,-0.000724,-0.000000,-0.000723,-0.000000,-0.000721,-0.000000,-0.000719,-0.000000,-0.000718,-0.000000,-0.000716,-0.000000,-0.000715,-0.000000,-0.000713,-0.000000,-0.000711,-0.000000,-0.000710,-0.000000,-0.000708,-0.000000,-0.000707,-0.000000,-0.000705,-0.000000,-0.000703,-0.000000,-0.000702,-0.000000,-0.000700,-0.000000,-0.000699,-0.000000,-0.000697,-0.000000,-0.000696,-0.000000,-0.000694,-0.000000,-0.000693,-0.000000,-0.000691,-0.000000,-0.000690,-0.000000,-0.000688,-0.000000,-0.000687,-0.000000,-0.000685,-0.000000,-0.000684,-0.000000,-0.000682,-0.000000,-0.000681,-0.000000,-0.000679,-0.000000,-0.000678,-0.000000,-0.000677,-0.000000,-0.000675,-0.000000,-0.000674,-0.000000,-0.000672,-0.000000,-0.000671,-0.000000,-0.000669,-0.000000,-0.000668,-0.000000,-0.000667,-0.000000,-0.000665,-0.000000,-0.000664,-0.000000,-0.000662,-0.000000,-0.000661,-0.000000,-0.000660,-0.000000,-0.000658,-0.000000,-0.000657,-0.000000,-0.000656,-0.000000,-0.000654,-0.000000,-0.000653,-0.000000,-0.000652,-0.000000,-0.000650,-0.000000,-0.000649,-0.000000,-0.000648,-0.000000,-0.000646,-0.000000,-0.000645,-0.000000,-0.000644,-0.000000,-0.000642,-0.000000,-0.000641,-0.000000,-0.000640,-0.000000,-0.000639,-0.000000,-0.000637,-0.000000,-0.000636,-0.000000,-0.000635,-0.000000,-0.000633,-0.000000,-0.000632,-0.000000,-0.000631,-0.000000,-0.000630,-0.000000,-0.000628,-0.000000,-0.000627,-0.000000,-0.000626,-0.000000,-0.000625,-0.000000,-0.000624,-0.000000,-0.000622,-0.000000,-0.000621,-0.000000,-0.000620,-0.000000,-0.000619,-0.000000,-0.000617,-0.000000,-0.000616,-0.000000,-0.000615,-0.000000,-0.000614,-0.000000,-0.000613,-0.000000,-0.000612,-0.000000,-0.000610,-0.000000,-0.000609,-0.000000,-0.000608,-0.000000,-0.000607,-0.000000,-0.000606,-0.000000,-0.000605,-0.000000,-0.000603,-0.000000,-0.000602,-0.000000,-0.000601,-0.000000,-0.000600,-0.000000,-0.000599,-0.000000,-0.000598,-0.000000,-0.000597,-0.000000,-0.000596,-0.000000,-0.000594,-0.000000,-0.000593,-0.000000,-0.000592,-0.000000,-0.000591,-0.000000,-0.000590,-0.000000,-0.000589,-0.000000,-0.000588,-0.000000,-0.000587,-0.000000,-0.000586,-0.000000,-0.000585,-0.000000,-0.000584,-0.000000,-0.000582,-0.000000,-0.000581,-0.000000,-0.000580,-0.000000,-0.000579,-0.000000,-0.000578,-0.000000,-0.000577,-0.000000,-0.000576,-0.000000,-0.000575,-0.000000,-0.000574,-0.000000,-0.000573,-0.000000,-0.000572,-0.000000,-0.000571,-0.000000,-0.000570,-0.000000,-0.000569,-0.000000,-0.000568,-0.000000,-0.000567,-0.000000,-0.000566,-0.000000,-0.000565,-0.000000,-0.000564,-0.000000,-0.000563,-0.000000,-0.000562,-0.000000,-0.000561,-0.000000,-0.000560,-0.000000,-0.000559,-0.000000,-0.000558,-0.000000,-0.000557,-0.000000,-0.000556,-0.000000,-0.000555,-0.000000,-0.000554,-0.000000,-0.000553,-0.000000,-0.000552,-0.000000,-0.000551,-0.000000,-0.000550,-0.000000,-0.000549,-0.000000,-0.000548,-0.000000,-0.000547,-0.000000,-0.000546,-0.000000,-0.000546,-0.000000,-0.000545,-0.000000,-0.000544,-0.000000,-0.000543,-0.000000,-0.000542,-0.000000,-0.000541,-0.000000,-0.000540,-0.000000,-0.000539,-0.000000,-0.000538,-0.000000,-0.000537,-0.000000,-0.000536,-0.000000,-0.000535,-0.000000,-0.000535,-0.000000,-0.000534,-0.000000,-0.000533,-0.000000,-0.000532,-0.000000,-0.000531,-0.000000,-0.000530,-0.000000,-0.000529,-0.000000,-0.000528,-0.000000,-0.000527,-0.000000,-0.000527,-0.000000,-0.000526,-0.000000,-0.000525,-0.000000,-0.000524,-0.000000,-0.000523,-0.000000,-0.000522,-0.000000,-0.000521,-0.000000,-0.000521,-0.000000,-0.000520,-0.000000,-0.000519,-0.000000,-0.000518,-0.000000,-0.000517,-0.000000,-0.000516,-0.000000,-0.000515,-0.000000,-0.000515,-0.000000,-0.000514,-0.000000,-0.000513,-0.000000,-0.000512,-0.000000,-0.000511,-0.000000,-0.000511,-0.000000,-0.000510,-0.000000,-0.000509,-0.000000,-0.000508,-0.000000,-0.000507,-0.000000,-0.000506,-0.000000,-0.000506,-0.000000,-0.000505,-0.000000,-0.000504,-0.000000,-0.000503,-0.000000,-0.000502,-0.000000,-0.000502,-0.000000,-0.000501,-0.000000,-0.000500,-0.000000,-0.000499,-0.000000,-0.000499,-0.000000,-0.000498,-0.000000,-0.000497,-0.000000,-0.000496,-0.000000,-0.000495,-0.000000,-0.000495,-0.000000,-0.000494,-0.000000,-0.000493,-0.000000,-0.000492,-0.000000,-0.000492,-0.000000,-0.000491,-0.000000,-0.000490,-0.000000,-0.000489,-0.000000,-0.000489,-0.000000,-0.000488,-0.000000,-0.000487,-0.000000,-0.000486,-0.000000,-0.000486,-0.000000,-0.000485,-0.000000,-0.000484,-0.000000,-0.000483,-0.000000,-0.000483,-0.000000,-0.000482,-0.000000,-0.000481,-0.000000,-0.000480,-0.000000,-0.000480,-0.000000,-0.000479,-0.000000,-0.000478,-0.000000,-0.000478,-0.000000,-0.000477,-0.000000,-0.000476,-0.000000,-0.000475,-0.000000,-0.000475,-0.000000,-0.000474,-0.000000,-0.000473,-0.000000,-0.000473,-0.000000,-0.000472,-0.000000,-0.000471,-0.000000,-0.000471,-0.000000,-0.000470,-0.000000,-0.000469,-0.000000,-0.000468,-0.000000,-0.000468,-0.000000,-0.000467,-0.000000,-0.000466,-0.000000,-0.000466,-0.000000,-0.000465,-0.000000,-0.000464,-0.000000,-0.000464,-0.000000,-0.000463,-0.000000,-0.000462,-0.000000,-0.000462,-0.000000,-0.000461,-0.000000,-0.000460,-0.000000,-0.000460,-0.000000,-0.000459,-0.000000,-0.000458,-0.000000,-0.000458,-0.000000,-0.000457,-0.000000,-0.000456,-0.000000,-0.000456,-0.000000,-0.000455,-0.000000,-0.000454,-0.000000,-0.000454,-0.000000,-0.000453,-0.000000,-0.000452,-0.000000,-0.000452,-0.000000,-0.000451,-0.000000,-0.000451,-0.000000,-0.000450,-0.000000,-0.000449,-0.000000,-0.000449,-0.000000,-0.000448,-0.000000,-0.000447,-0.000000,-0.000447,-0.000000,-0.000446,-0.000000,-0.000446,-0.000000,-0.000445,-0.000000,-0.000444,-0.000000,-0.000444,-0.000000,-0.000443,-0.000000,-0.000442,-0.000000,-0.000442,-0.000000,-0.000441,-0.000000,-0.000441,-0.000000,-0.000440,-0.000000,-0.000439,-0.000000,-0.000439,-0.000000,-0.000438,-0.000000,-0.000438,-0.000000,-0.000437,-0.000000,-0.000436,-0.000000,-0.000436,-0.000000,-0.000435,-0.000000,-0.000435,-0.000000,-0.000434,-0.000000,-0.000433,-0.000000,-0.000433,-0.000000,-0.000432,-0.000000,-0.000432,-0.000000,-0.000431,-0.000000,-0.000430,-0.000000,-0.000430,-0.000000,-0.000429,-0.000000,-0.000429,-0.000000,-0.000428,-0.000000,-0.000428,-0.000000,-0.000427,-0.000000,-0.000426,-0.000000,-0.000426,-0.000000,-0.000425,-0.000000,-0.000425,-0.000000,-0.000424,-0.000000,-0.000424,-0.000000,-0.000423,-0.000000,-0.000422,-0.000000,-0.000422,-0.000000,-0.000421,-0.000000,-0.000421,-0.000000,-0.000420,-0.000000,-0.000420,-0.000000,-0.000419,-0.000000,-0.000419,-0.000000,-0.000418,-0.000000,-0.000417,-0.000000,-0.000417,-0.000000,-0.000416,-0.000000,-0.000416,-0.000000,-0.000415,-0.000000,-0.000415,-0.000000,-0.000414,-0.000000,-0.000414,-0.000000,-0.000413,-0.000000,-0.000413,-0.000000,-0.000412,-0.000000,-0.000412,-0.000000,-0.000411,-0.000000,-0.000410,-0.000000,-0.000410,-0.000000,-0.000409,-0.000000,-0.000409,-0.000000,-0.000408,-0.000000,-0.000408,-0.000000,-0.000407,-0.000000,-0.000407,-0.000000,-0.000406,-0.000000,-0.000406,-0.000000,-0.000405,-0.000000,-0.000405,-0.000000,-0.000404,-0.000000,-0.000404,-0.000000,-0.000403,-0.000000,-0.000403,-0.000000,-0.000402,-0.000000,-0.000402,-0.000000,-0.000401,-0.000000,-0.000401,-0.000000,-0.000400,-0.000000,-0.000400,-0.000000,-0.000399,-0.000000,-0.000399,-0.000000,-0.000398,-0.000000,-0.000398,-0.000000,-0.000397,-0.000000,-0.000397,-0.000000,-0.000396,-0.000000,-0.000396,-0.000000,-0.000395,-0.000000,-0.000395,-0.000000,-0.000394,-0.000000,-0.000394,-0.000000,-0.000393,-0.000000,-0.000393,-0.000000,-0.000392,-0.000000,-0.000392,-0.000000,-0.000391,-0.000000,-0.000391,-0.000000,-0.000390,-0.000000,-0.000390,-0.000000,-0.000389,-0.000000,-0.000389,-0.000000,-0.000388,-0.000000,-0.000388,-0.000000,-0.000387,-0.000000,-0.000387,-0.000000,-0.000387,-0.000000,-0.000386,-0.000000,-0.000386,-0.000000,-0.000385,-0.000000,-0.000385,-0.000000,-0.000384,-0.000000,-0.000384,-0.000000,-0.000383,-0.000000,-0.000383,-0.000000,-0.000382,-0.000000,-0.000382,-0.000000,-0.000381,-0.000000,-0.000381,-0.000000,-0.000381,-0.000000,-0.000380,-0.000000,-0.000380,-0.000000,-0.000379,-0.000000,-0.000379,-0.000000,-0.000378,-0.000000,-0.000378,-0.000000,-0.000377,-0.000000,-0.000377,-0.000000,-0.000376,-0.000000,-0.000376,-0.000000,-0.000376,-0.000000,-0.000375,-0.000000,-0.000375,-0.000000,-0.000374,-0.000000,-0.000374,-0.000000,-0.000373,-0.000000,-0.000373,-0.000000,-0.000373,-0.000000,-0.000372,-0.000000,-0.000372,-0.000000,-0.000371,-0.000000,-0.000371,-0.000000,-0.000370,-0.000000,-0.000370,-0.000000,-0.000369,-0.000000,-0.000369,-0.000000,-0.000369,-0.000000,-0.000368,-0.000000,-0.000368,-0.000000,-0.000367,-0.000000,-0.000367,-0.000000,-0.000367,-0.000000,-0.000366,-0.000000,-0.000366,-0.000000,-0.000365,-0.000000,-0.000365,-0.000000,-0.000364,-0.000000,-0.000364,-0.000000,-0.000364,-0.000000,-0.000363,-0.000000,-0.000363,-0.000000,-0.000362,-0.000000,-0.000362,-0.000000,-0.000362,-0.000000,-0.000361,-0.000000,-0.000361,-0.000000,-0.000360,-0.000000,-0.000360,-0.000000,-0.000359,-0.000000,-0.000359,-0.000000,-0.000359,-0.000000,-0.000358,-0.000000,-0.000358,-0.000000,-0.000357,-0.000000,-0.000357,-0.000000,-0.000357,-0.000000,-0.000356,-0.000000,-0.000356,-0.000000,-0.000355,-0.000000,-0.000355,-0.000000,-0.000355,-0.000000,-0.000354,-0.000000,-0.000354,-0.000000,-0.000353,-0.000000,-0.000353,-0.000000,-0.000353,-0.000000,-0.000352,-0.000000,-0.000352,-0.000000,-0.000352,-0.000000,-0.000351,-0.000000,-0.000351,-0.000000,-0.000350,-0.000000,-0.000350,-0.000000,-0.000350,-0.000000,-0.000349,-0.000000,-0.000349,-0.000000,-0.000348,-0.000000,-0.000348,-0.000000,-0.000348,-0.000000,-0.000347,-0.000000,-0.000347,-0.000000,-0.000347,-0.000000,-0.000346,-0.000000,-0.000346,-0.000000,-0.000345,-0.000000,-0.000345,-0.000000,-0.000345,-0.000000,-0.000344,-0.000000,-0.000344,-0.000000,-0.000344,-0.000000,-0.000343,-0.000000,-0.000343,-0.000000,-0.000342,-0.000000,-0.000342,-0.000000,-0.000342,-0.000000,-0.000341,-0.000000,-0.000341,-0.000000,-0.000341,-0.000000,-0.000340,-0.000000,-0.000340,-0.000000,-0.000340,-0.000000,-0.000339,-0.000000,-0.000339,-0.000000,-0.000338,-0.000000,-0.000338,-0.000000,-0.000338,-0.000000,-0.000337,-0.000000,-0.000337,-0.000000,-0.000337,-0.000000,-0.000336,-0.000000,-0.000336,-0.000000,-0.000336,-0.000000,-0.000335,-0.000000,-0.000335,-0.000000,-0.000335,-0.000000,-0.000334,-0.000000,-0.000334,-0.000000,-0.000333,-0.000000,-0.000333,-0.000000,-0.000333,-0.000000,-0.000332,-0.000000,-0.000332,-0.000000,-0.000332,-0.000000,-0.000331,-0.000000,-0.000331,-0.000000,-0.000331,-0.000000,-0.000330,-0.000000,-0.000330,-0.000000,-0.000330,-0.000000,-0.000329,-0.000000,-0.000329,-0.000000,-0.000329,-0.000000,-0.000328,-0.000000,-0.000328,-0.000000,-0.000328,-0.000000,-0.000327,-0.000000,-0.000327,-0.000000,-0.000327,-0.000000,-0.000326,-0.000000,-0.000326,-0.000000,-0.000326,-0.000000,-0.000325,-0.000000,-0.000325,-0.000000,-0.000325,-0.000000,-0.000324,-0.000000,-0.000324,-0.000000,-0.000324,-0.000000,-0.000323,-0.000000,-0.000323,-0.000000,-0.000323,-0.000000,-0.000322,-0.000000,-0.000322,-0.000000,-0.000322,-0.000000,-0.000321,-0.000000,-0.000321,-0.000000,-0.000321,-0.000000,-0.000320,-0.000000,-0.000320,-0.000000,-0.000320,-0.000000,-0.000319,-0.000000,-0.000319,-0.000000,-0.000319,-0.000000,-0.000318,-0.000000,-0.000318,-0.000000,-0.000318,-0.000000,-0.000318,-0.000000,-0.000317,-0.000000,-0.000317,-0.000000,-0.000317,-0.000000,-0.000316,-0.000000,-0.000316,-0.000000,-0.000316,-0.000000,-0.000315,-0.000000,-0.000315,-0.000000,-0.000315,-0.000000,-0.000314,-0.000000,-0.000314,-0.000000,-0.000314,-0.000000,-0.000313,-0.000000,-0.000313,-0.000000,-0.000313,-0.000000,-0.000313,-0.000000,-0.000312,-0.000000,-0.000312,-0.000000,-0.000312,-0.000000,-0.000311,-0.000000,-0.000311] }
		},
		{
			name: "TB303 Square",
			fft: { "realimag": [0.000000,-0.462670,-0.000000,0.514476,0.000000,-0.222225,-0.000000,0.198434,0.000000,-0.131464,-0.000000,0.122448,0.000000,-0.093145,-0.000000,0.088485,0.000000,-0.072092,-0.000000,0.069258,0.000000,-0.058792,-0.000000,0.056891,0.000000,-0.049633,0.000000,0.048269,0.000000,-0.042941,-0.000000,0.041916,0.000000,-0.037839,0.000000,0.037040,0.000000,-0.033820,-0.000000,0.033180,0.000000,-0.030572,0.000000,0.030049,0.000000,-0.027894,-0.000000,0.027457,0.000000,-0.025647,0.000000,0.025277,-0.000000,-0.023735,-0.000000,0.023418,0.000000,-0.022088,0.000000,0.021813,0.000000,-0.020655,-0.000000,0.020414,0.000000,-0.019396,-0.000000,0.019184,-0.000000,-0.018282,-0.000000,0.018094,0.000000,-0.017290,-0.000000,0.017121,0.000000,-0.016399,-0.000000,0.016247,0.000000,-0.015595,-0.000000,0.015458,-0.000000,-0.014867,-0.000000,0.014742,0.000000,-0.014204,-0.000000,0.014090,0.000000,-0.013597,0.000000,0.013492,0.000000,-0.013040,-0.000000,0.012944,-0.000000,-0.012527,-0.000000,0.012438,-0.000000,-0.012053,-0.000000,0.011970,0.000000,-0.011613,0.000000,0.011536,0.000000,-0.011204,-0.000000,0.011133,-0.000000,-0.010823,-0.000000,0.010757,0.000000,-0.010467,-0.000000,0.010405,0.000000,-0.010134,0.000000,0.010076,0.000000,-0.009821,-0.000000,0.009767,0.000000,-0.009527,-0.000000,0.009476,-0.000000,-0.009251,-0.000000,0.009202,0.000000,-0.008989,0.000000,0.008943,0.000000,-0.008742,-0.000000,0.008699,0.000000,-0.008509,-0.000000,0.008468,0.000000,-0.008287,-0.000000,0.008248,0.000000,-0.008077,0.000000,0.008040,0.000000,-0.007877,-0.000000,0.007842,0.000000,-0.007687,0.000000,0.007653,-0.000000,-0.007506,-0.000000,0.007474,0.000000,-0.007333,-0.000000,0.007302,0.000000,-0.007168,0.000000,0.007138,0.000000,-0.007010,-0.000000,0.006982,0.000000,-0.006859,-0.000000,0.006832,-0.000000,-0.006714,-0.000000,0.006688,0.000000,-0.006575,-0.000000,0.006551,0.000000,-0.006442,0.000000,0.006419,-0.000000,-0.006314,-0.000000,0.006292,0.000000,-0.006192,-0.000000,0.006170,-0.000000,-0.006073,0.000000,0.006053,0.000000,-0.005960,-0.000000,0.005940,0.000000,-0.005850,-0.000000,0.005831,-0.000000,-0.005745,-0.000000,0.005726,0.000000,-0.005643,-0.000000,0.005625,0.000000,-0.005545,0.000000,0.005527,-0.000000,-0.005450,-0.000000,0.005433,0.000000,-0.005358,-0.000000,0.005342,0.000000,-0.005269,0.000000,0.005253,0.000000,-0.005183,-0.000000,0.005168,0.000000,-0.005100,-0.000000,0.005086,-0.000000,-0.005020,-0.000000,0.005006,0.000000,-0.004942,-0.000000,0.004928,0.000000,-0.004866,0.000000,0.004853,0.000000,-0.004793,-0.000000,0.004780,0.000000,-0.004722,-0.000000,0.004709,-0.000000,-0.004653,0.000000,0.004641,0.000000,-0.004586,-0.000000,0.004574,0.000000,-0.004521,-0.000000,0.004509,-0.000000,-0.004458,-0.000000,0.004446,0.000000,-0.004396,-0.000000,0.004385,0.000000,-0.004336,0.000000,0.004325,0.000000,-0.004278,-0.000000,0.004267,0.000000,-0.004221,-0.000000,0.004211,0.000000,-0.004166,-0.000000,0.004156,0.000000,-0.004112,-0.000000,0.004102,0.000000,-0.004060,-0.000000,0.004050,-0.000000,-0.004008,-0.000000,0.003999,0.000000,-0.003959,-0.000000,0.003950,0.000000,-0.003910,-0.000000,0.003901,0.000000,-0.003863,-0.000000,0.003854,-0.000000,-0.003816,0.000000,0.003808,-0.000000,-0.003771,-0.000000,0.003763,0.000000,-0.003727,-0.000000,0.003719,0.000000,-0.003684,-0.000000,0.003676,0.000000,-0.003642,-0.000000,0.003634,0.000000,-0.003600,0.000000,0.003593,-0.000000,-0.003560,0.000000,0.003553,0.000000,-0.003521,-0.000000,0.003514,0.000000,-0.003482,-0.000000,0.003475,0.000000,-0.003445,-0.000000,0.003438,0.000000,-0.003408,0.000000,0.003401,-0.000000,-0.003372,0.000000,0.003365,0.000000,-0.003336,-0.000000,0.003330,0.000000,-0.003302,-0.000000,0.003295,0.000000,-0.003268,-0.000000,0.003262,0.000000,-0.003235,-0.000000,0.003229,-0.000000,-0.003202,0.000000,0.003196,-0.000000,-0.003170,-0.000000,0.003164,0.000000,-0.003139,-0.000000,0.003133,0.000000,-0.003108,-0.000000,0.003103,0.000000,-0.003078,-0.000000,0.003073,-0.000000,-0.003049,0.000000,0.003043,-0.000000,-0.003020,-0.000000,0.003015,0.000000,-0.002991,-0.000000,0.002986,0.000000,-0.002964,-0.000000,0.002959,0.000000,-0.002936,-0.000000,0.002931,0.000000,-0.002909,0.000000,0.002905,-0.000000,-0.002883,0.000000,0.002878,0.000000,-0.002857,-0.000000,0.002852,0.000000,-0.002832,-0.000000,0.002827,0.000000,-0.002807,-0.000000,0.002802,0.000000,-0.002782,-0.000000,0.002778,-0.000000,-0.002758,0.000000,0.002754,-0.000000,-0.002734,-0.000000,0.002730,0.000000,-0.002711,-0.000000,0.002707,0.000000,-0.002688,-0.000000,0.002684,0.000000,-0.002666,-0.000000,0.002662,0.000000,-0.002644,0.000000,0.002640,-0.000000,-0.002622,-0.000000,0.002618,0.000000,-0.002600,-0.000000,0.002597,0.000000,-0.002579,-0.000000,0.002576,0.000000,-0.002559,-0.000000,0.002555,0.000000,-0.002538,0.000000,0.002534,-0.000000,-0.002518,0.000000,0.002514,0.000000,-0.002498,-0.000000,0.002495,0.000000,-0.002479,-0.000000,0.002475,0.000000,-0.002460,-0.000000,0.002456,0.000000,-0.002441,-0.000000,0.002437,-0.000000,-0.002422,0.000000,0.002419,0.000000,-0.002404,-0.000000,0.002401,0.000000,-0.002386,-0.000000,0.002383,0.000000,-0.002368,-0.000000,0.002365,0.000000,-0.002351,-0.000000,0.002348,-0.000000,-0.002333,0.000000,0.002330,-0.000000,-0.002317,-0.000000,0.002313,0.000000,-0.002300,-0.000000,0.002297,0.000000,-0.002283,-0.000000,0.002280,0.000000,-0.002267,-0.000000,0.002264,0.000000,-0.002251,0.000000,0.002248,-0.000000,-0.002235,-0.000000,0.002232,0.000000,-0.002220,-0.000000,0.002217,0.000000,-0.002204,-0.000000,0.002201,0.000000,-0.002189,-0.000000,0.002186,0.000000,-0.002174,-0.000000,0.002171,-0.000000,-0.002159,0.000000,0.002157,0.000000,-0.002145,-0.000000,0.002142,0.000000,-0.002130,-0.000000,0.002128,0.000000,-0.002116,-0.000000,0.002114,0.000000,-0.002102,-0.000000,0.002100,0.000000,-0.002089,0.000000,0.002086,0.000000,-0.002075,-0.000000,0.002072,0.000000,-0.002061,-0.000000,0.002059,0.000000,-0.002048,-0.000000,0.002046,0.000000,-0.002035,-0.000000,0.002033,0.000000,-0.002022,0.000000,0.002020,-0.000000,-0.002009,-0.000000,0.002007,0.000000,-0.001997,-0.000000,0.001995,0.000000,-0.001984,-0.000000,0.001982,0.000000,-0.001972,-0.000000,0.001970,0.000000,-0.001960,-0.000000,0.001958,0.000000,-0.001948,-0.000000,0.001946,0.000000,-0.001936,-0.000000,0.001934,0.000000,-0.001924,-0.000000,0.001922,-0.000000,-0.001913,-0.000000,0.001911,-0.000000,-0.001901,-0.000000,0.001899,-0.000000,-0.001890,-0.000000,0.001888,0.000000,-0.001879,-0.000000,0.001877,0.000000,-0.001868,-0.000000,0.001866,0.000000,-0.001857,0.000000,0.001855,0.000000,-0.001846,0.000000,0.001844,0.000000,-0.001836,0.000000,0.001834,0.000000,-0.001825,-0.000000,0.001823,0.000000,-0.001815,-0.000000,0.001813,0.000000,-0.001804,-0.000000,0.001803,-0.000000,-0.001794,-0.000000,0.001792,-0.000000,-0.001784,-0.000000,0.001782,-0.000000,-0.001774,-0.000000,0.001772,0.000000,-0.001764,-0.000000,0.001763,0.000000,-0.001755,0.000000,0.001753,0.000000,-0.001745,0.000000,0.001743,0.000000,-0.001736,0.000000,0.001734,0.000000,-0.001726,0.000000,0.001724,0.000000,-0.001717,-0.000000,0.001715,0.000000,-0.001708,-0.000000,0.001706,-0.000000,-0.001698,-0.000000,0.001697,-0.000000,-0.001689,-0.000000,0.001688,-0.000000,-0.001681,-0.000000,0.001679,0.000000,-0.001672,-0.000000,0.001670,0.000000,-0.001663,-0.000000,0.001661,0.000000,-0.001654,0.000000,0.001653,0.000000,-0.001646,0.000000,0.001644,0.000000,-0.001637,0.000000,0.001636,0.000000,-0.001629,-0.000000,0.001627,0.000000,-0.001621,-0.000000,0.001619,0.000000,-0.001612,-0.000000,0.001611,-0.000000,-0.001604,-0.000000,0.001603,-0.000000,-0.001596,-0.000000,0.001595,-0.000000,-0.001588,-0.000000,0.001587,0.000000,-0.001580,-0.000000,0.001579,0.000000,-0.001573,-0.000000,0.001571,0.000000,-0.001565,0.000000,0.001563,0.000000,-0.001557,0.000000,0.001556,0.000000,-0.001550,0.000000,0.001548,0.000000,-0.001542,-0.000000,0.001541,0.000000,-0.001535,-0.000000,0.001533,-0.000000,-0.001527,-0.000000,0.001526,-0.000000,-0.001520,-0.000000,0.001519,-0.000000,-0.001513,-0.000000,0.001512,0.000000,-0.001506,-0.000000,0.001504,0.000000,-0.001499,-0.000000,0.001497,0.000000,-0.001492,0.000000,0.001490,0.000000,-0.001485,0.000000,0.001483,0.000000,-0.001478,0.000000,0.001476,0.000000,-0.001471,-0.000000,0.001470,0.000000,-0.001464,-0.000000,0.001463,0.000000,-0.001457,-0.000000,0.001456,-0.000000,-0.001451,-0.000000,0.001450,-0.000000,-0.001444,-0.000000,0.001443,-0.000000,-0.001438,-0.000000,0.001436,0.000000,-0.001431,-0.000000,0.001430,0.000000,-0.001425,-0.000000,0.001424,0.000000,-0.001418,0.000000,0.001417,0.000000,-0.001412,0.000000,0.001411,0.000000,-0.001406,0.000000,0.001405,0.000000,-0.001400,-0.000000,0.001399,0.000000,-0.001394,-0.000000,0.001392,0.000000,-0.001388,-0.000000,0.001386,-0.000000,-0.001381,-0.000000,0.001380,-0.000000,-0.001376,-0.000000,0.001374,-0.000000,-0.001370,-0.000000,0.001369,0.000000,-0.001364,-0.000000,0.001363,0.000000,-0.001358,-0.000000,0.001357,0.000000,-0.001352,0.000000,0.001351,0.000000,-0.001346,0.000000,0.001345,0.000000,-0.001341,-0.000000,0.001340,0.000000,-0.001335,-0.000000,0.001334,0.000000,-0.001330,-0.000000,0.001329,0.000000,-0.001324,-0.000000,0.001323,-0.000000,-0.001319,-0.000000,0.001318,-0.000000,-0.001313,-0.000000,0.001312,0.000000,-0.001308,-0.000000,0.001307,0.000000,-0.001302,-0.000000,0.001301,0.000000,-0.001297,0.000000,0.001296,0.000000,-0.001292,0.000000,0.001291,0.000000,-0.001287,0.000000,0.001286,0.000000,-0.001281,-0.000000,0.001280,0.000000,-0.001276,-0.000000,0.001275,0.000000,-0.001271,-0.000000,0.001270,-0.000000,-0.001266,-0.000000,0.001265,-0.000000,-0.001261,-0.000000,0.001260,-0.000000,-0.001256,-0.000000,0.001255,0.000000,-0.001251,-0.000000,0.001250,0.000000,-0.001246,-0.000000,0.001245,0.000000,-0.001241,0.000000,0.001241,0.000000,-0.001237,0.000000,0.001236,0.000000,-0.001232,-0.000000,0.001231,0.000000,-0.001227,-0.000000,0.001226,0.000000,-0.001222,-0.000000,0.001221,0.000000,-0.001218,-0.000000,0.001217,-0.000000,-0.001213,-0.000000,0.001212,-0.000000,-0.001208,-0.000000,0.001208,0.000000,-0.001204,-0.000000,0.001203,0.000000,-0.001199,-0.000000,0.001198,0.000000,-0.001195,-0.000000,0.001194,0.000000,-0.001190,0.000000,0.001190,0.000000,-0.001186,0.000000,0.001185,0.000000,-0.001182,-0.000000,0.001181,0.000000,-0.001177,-0.000000,0.001176,0.000000,-0.001173,-0.000000,0.001172,-0.000000,-0.001168,-0.000000,0.001168,-0.000000,-0.001164,-0.000000,0.001163,-0.000000,-0.001160,-0.000000,0.001159,0.000000,-0.001156,-0.000000,0.001155,0.000000,-0.001152,-0.000000,0.001151,0.000000,-0.001147,0.000000,0.001147,0.000000,-0.001143,0.000000,0.001143,0.000000,-0.001139,-0.000000,0.001138,0.000000,-0.001135,-0.000000,0.001134,0.000000,-0.001131,-0.000000,0.001130,0.000000,-0.001127,-0.000000,0.001126,-0.000000,-0.001123,-0.000000,0.001122,-0.000000,-0.001119,-0.000000,0.001118,0.000000,-0.001115,-0.000000,0.001115,0.000000,-0.001111,-0.000000,0.001111,0.000000,-0.001108,-0.000000,0.001107,0.000000,-0.001104,0.000000,0.001103,0.000000,-0.001100,0.000000,0.001099,0.000000,-0.001096,-0.000000,0.001095,0.000000,-0.001092,-0.000000,0.001092,0.000000,-0.001089,-0.000000,0.001088,0.000000,-0.001085,-0.000000,0.001084,-0.000000,-0.001081,-0.000000,0.001081,-0.000000,-0.001078,-0.000000,0.001077,0.000000,-0.001074,-0.000000,0.001073,0.000000,-0.001070,-0.000000,0.001070,0.000000,-0.001067,-0.000000,0.001066,0.000000,-0.001063,0.000000,0.001062,0.000000,-0.001060,0.000000,0.001059,0.000000,-0.001056,-0.000000,0.001055,0.000000,-0.001053,-0.000000,0.001052,0.000000,-0.001049,-0.000000,0.001048,0.000000,-0.001046,-0.000000,0.001045,-0.000000,-0.001042,-0.000000,0.001042,0.000000,-0.001039,-0.000000,0.001038,0.000000,-0.001035,-0.000000,0.001035,0.000000,-0.001032,-0.000000,0.001031,0.000000,-0.001029,0.000000,0.001028,0.000000,-0.001025,0.000000,0.001025,0.000000,-0.001022,-0.000000,0.001022,0.000000,-0.001019,-0.000000,0.001018,0.000000,-0.001016,-0.000000,0.001015,0.000000,-0.001012,-0.000000,0.001012,-0.000000,-0.001009,-0.000000,0.001009,-0.000000,-0.001006,-0.000000,0.001005,0.000000,-0.001003,-0.000000,0.001002,0.000000,-0.001000,-0.000000,0.000999,0.000000,-0.000997,-0.000000,0.000996,0.000000,-0.000993,0.000000,0.000993,0.000000,-0.000990,0.000000,0.000990,0.000000,-0.000987,-0.000000,0.000987,0.000000,-0.000984,-0.000000,0.000984,0.000000,-0.000981,-0.000000,0.000981,0.000000,-0.000978,-0.000000,0.000978,0.000000,-0.000975,0.000000,0.000975,0.000000,-0.000972,-0.000000,0.000972,0.000000,-0.000969,0.000000,0.000969,0.000000,-0.000966,-0.000000,0.000966,0.000000,-0.000963,0.000000,0.000963,0.000000,-0.000960,-0.000000,0.000960,-0.000000,-0.000958,-0.000000,0.000957,0.000000,-0.000955,-0.000000,0.000954,-0.000000,-0.000952,-0.000000,0.000951,0.000000,-0.000949,-0.000000,0.000949,-0.000000,-0.000946,-0.000000,0.000946,0.000000,-0.000943,0.000000,0.000943,0.000000,-0.000941,-0.000000,0.000940,0.000000,-0.000938,0.000000,0.000937,0.000000,-0.000935,-0.000000,0.000935,0.000000,-0.000932,0.000000,0.000932,0.000000,-0.000930,-0.000000,0.000929,-0.000000,-0.000927,-0.000000,0.000926,0.000000,-0.000924,-0.000000,0.000924,-0.000000,-0.000922,-0.000000,0.000921,0.000000,-0.000919,-0.000000,0.000918,-0.000000,-0.000916,-0.000000,0.000916,0.000000,-0.000914,0.000000,0.000913,0.000000,-0.000911,-0.000000,0.000911,0.000000,-0.000908,0.000000,0.000908,0.000000,-0.000906,-0.000000,0.000905,0.000000,-0.000903,0.000000,0.000903,0.000000,-0.000901,-0.000000,0.000900,-0.000000,-0.000898,-0.000000,0.000898,0.000000,-0.000896,-0.000000,0.000895,-0.000000,-0.000893,-0.000000,0.000893,0.000000,-0.000891,0.000000,0.000890,-0.000000,-0.000888,-0.000000,0.000888,0.000000,-0.000886,0.000000,0.000885,0.000000,-0.000883,-0.000000,0.000883,0.000000,-0.000881,0.000000,0.000880,0.000000,-0.000878,-0.000000,0.000878,-0.000000,-0.000876,0.000000,0.000875,0.000000,-0.000873,-0.000000,0.000873,-0.000000,-0.000871,-0.000000,0.000871,0.000000,-0.000869,-0.000000,0.000868,-0.000000,-0.000866,-0.000000,0.000866,0.000000,-0.000864,0.000000,0.000864,-0.000000,-0.000862,-0.000000,0.000861,0.000000,-0.000859,0.000000,0.000859,0.000000,-0.000857,-0.000000,0.000857,0.000000,-0.000855,0.000000,0.000854,0.000000,-0.000852,-0.000000,0.000852,-0.000000,-0.000850,-0.000000,0.000850,0.000000,-0.000848,-0.000000,0.000847,-0.000000,-0.000846,-0.000000,0.000845,0.000000,-0.000843,-0.000000,0.000843,-0.000000,-0.000841,-0.000000,0.000841,0.000000,-0.000839,0.000000,0.000839,0.000000,-0.000837,-0.000000,0.000836,0.000000,-0.000835,0.000000,0.000834,0.000000,-0.000832,-0.000000,0.000832,0.000000,-0.000830,0.000000,0.000830,0.000000,-0.000828,-0.000000,0.000828,-0.000000,-0.000826,-0.000000,0.000826,0.000000,-0.000824,-0.000000,0.000823,-0.000000,-0.000822,-0.000000,0.000821,0.000000,-0.000820,-0.000000,0.000819,-0.000000,-0.000817,-0.000000,0.000817,0.000000,-0.000815,0.000000,0.000815,0.000000,-0.000813,-0.000000,0.000813,0.000000,-0.000811,0.000000,0.000811,0.000000,-0.000809,-0.000000,0.000809,0.000000,-0.000807,0.000000,0.000807,0.000000,-0.000805,-0.000000,0.000805,-0.000000,-0.000803,-0.000000,0.000803,0.000000,-0.000801,-0.000000,0.000801,-0.000000,-0.000799,-0.000000,0.000799,0.000000,-0.000797,-0.000000,0.000797,-0.000000,-0.000795,-0.000000,0.000795,0.000000,-0.000793,0.000000,0.000793,0.000000,-0.000791,-0.000000,0.000791,0.000000,-0.000789,0.000000,0.000789,0.000000,-0.000787,-0.000000,0.000787,0.000000,-0.000785,0.000000,0.000785,0.000000,-0.000783,-0.000000,0.000783,-0.000000,-0.000781,-0.000000,0.000781,0.000000,-0.000779,-0.000000,0.000779,-0.000000,-0.000777,-0.000000,0.000777,0.000000,-0.000776,-0.000000,0.000775,-0.000000,-0.000774,-0.000000,0.000773,0.000000,-0.000772,0.000000,0.000771,0.000000,-0.000770,-0.000000,0.000770,0.000000,-0.000768,0.000000,0.000768,0.000000,-0.000766,-0.000000,0.000766,-0.000000,-0.000764,0.000000,0.000764,0.000000,-0.000763,-0.000000,0.000762,-0.000000,-0.000761,-0.000000,0.000760,0.000000,-0.000759,-0.000000,0.000759,-0.000000,-0.000757,-0.000000,0.000757,0.000000,-0.000755,0.000000,0.000755,0.000000,-0.000754,-0.000000,0.000753,0.000000,-0.000752,0.000000,0.000751,0.000000,-0.000750,-0.000000,0.000750,0.000000,-0.000748,0.000000,0.000748,0.000000,-0.000746,-0.000000,0.000746,-0.000000,-0.000745,-0.000000,0.000744,0.000000,-0.000743,-0.000000,0.000743,-0.000000,-0.000741,-0.000000,0.000741,0.000000,-0.000740,-0.000000,0.000739,-0.000000,-0.000738,-0.000000,0.000738,0.000000,-0.000736,0.000000,0.000736,0.000000,-0.000734,-0.000000,0.000734,0.000000,-0.000733,0.000000,0.000732,0.000000,-0.000731,-0.000000,0.000731,0.000000,-0.000729,0.000000,0.000729,0.000000,-0.000728,-0.000000,0.000727,-0.000000,-0.000726,-0.000000,0.000726,0.000000,-0.000724,-0.000000,0.000724,-0.000000,-0.000723,-0.000000,0.000722,0.000000,-0.000721,-0.000000,0.000721,-0.000000,-0.000719,-0.000000,0.000719,0.000000,-0.000718,0.000000,0.000718,0.000000,-0.000716,-0.000000,0.000716,0.000000,-0.000715,0.000000,0.000714,0.000000,-0.000713,-0.000000,0.000713,0.000000,-0.000711,0.000000,0.000711,0.000000,-0.000710,-0.000000,0.000710,-0.000000,-0.000708,-0.000000,0.000708,0.000000,-0.000707,-0.000000,0.000706,-0.000000,-0.000705,-0.000000,0.000705,0.000000,-0.000704,-0.000000,0.000703,-0.000000,-0.000702,-0.000000,0.000702,0.000000,-0.000700,0.000000,0.000700,0.000000,-0.000699,-0.000000,0.000699,0.000000,-0.000697,0.000000,0.000697,0.000000,-0.000696,-0.000000,0.000696,0.000000,-0.000694,0.000000,0.000694,0.000000,-0.000693,-0.000000,0.000693,-0.000000,-0.000691,-0.000000,0.000691,0.000000,-0.000690,-0.000000,0.000690,-0.000000,-0.000688,-0.000000,0.000688,0.000000,-0.000687,-0.000000,0.000687,-0.000000,-0.000685,-0.000000,0.000685,0.000000,-0.000684,0.000000,0.000684,0.000000,-0.000682,-0.000000,0.000682,0.000000,-0.000681,0.000000,0.000681,0.000000,-0.000680,-0.000000,0.000679,0.000000,-0.000678,-0.000000,0.000678,0.000000,-0.000677,-0.000000,0.000676,-0.000000,-0.000675,-0.000000,0.000675,0.000000,-0.000674,-0.000000,0.000674,-0.000000,-0.000672,-0.000000,0.000672,0.000000,-0.000671,-0.000000,0.000671,0.000000,-0.000670,-0.000000,0.000669,0.000000,-0.000668,0.000000,0.000668,0.000000,-0.000667,-0.000000,0.000666,0.000000,-0.000665,0.000000,0.000665,0.000000,-0.000664,-0.000000,0.000664,0.000000,-0.000663,-0.000000,0.000662,0.000000,-0.000661,-0.000000,0.000661,-0.000000,-0.000660,-0.000000,0.000660,0.000000,-0.000658,-0.000000,0.000658,-0.000000,-0.000657,-0.000000,0.000657,0.000000,-0.000656,0.000000,0.000656,0.000000,-0.000654,-0.000000,0.000654,0.000000,-0.000653,0.000000,0.000653,0.000000,-0.000652,-0.000000,0.000651,0.000000,-0.000650,0.000000,0.000650,0.000000,-0.000649,-0.000000,0.000649,-0.000000,-0.000648,-0.000000,0.000648,0.000000,-0.000646,-0.000000,0.000646,-0.000000,-0.000645,-0.000000,0.000645,0.000000,-0.000644,-0.000000,0.000644,-0.000000,-0.000643,-0.000000,0.000642,0.000000,-0.000641,0.000000,0.000641,0.000000,-0.000640,-0.000000,0.000640,0.000000,-0.000639,0.000000,0.000638,0.000000,-0.000637,-0.000000,0.000637,0.000000,-0.000636,0.000000,0.000636,0.000000,-0.000635,-0.000000,0.000635,-0.000000,-0.000634,-0.000000,0.000633,0.000000,-0.000632,-0.000000,0.000632,-0.000000,-0.000631,-0.000000,0.000631,0.000000,-0.000630,-0.000000,0.000630,-0.000000,-0.000629,-0.000000,0.000628,0.000000,-0.000627,0.000000,0.000627,0.000000,-0.000626,-0.000000,0.000626,0.000000,-0.000625,0.000000,0.000625,0.000000,-0.000624,-0.000000,0.000623,0.000000,-0.000622,-0.000000,0.000622] }
		}
	],

	SEMITONE_CENTS: SEMITONE_CENTS,
	OCTAVE_CENTS: 12 * SEMITONE_CENTS,
	FINE_DETUNE_HALF_SPECTRE: 8,
	RANGE_DEFAULT_BASE: 3,

	DEFAULT_VOICE_COUNT: 10,

	DEFAULT_POLYPHONY_SETTINGS: {
		voiceCount: {
			value: 10,
			range: [ 1, 10 ]
		},
		sustain: {
			value: 0,
			range: [ 0, 1 ]
		}
	},

	DEFAULT_PITCH_SETTINGS: {
		bend: {
			value: 0,
			range: [ -200, 200 ]
		}
	},
	DEFAULT_MOD_SETTINGS: {
		waveform: {
			value: 0,
			range: [ 0, 5 ]
		},
		portamento: {
			value: 5 / 100 / 6,
			range: [ 0, 1/6 ]
		},
		rate: {
			value: 0,
			range: [ 0, 15 ]
		}
	},
	DEFAULT_OSC_SETTINGS: {
		osc1: {
			range: {
				value: 0,
				range: [ -4, 2 ]
			},
			fineDetune: {
				value: 0,
				range: [ -8, 8 ]
			},
			waveform: {
				value: 0,
				range: [ 0, 5 ]
			}
		},
		osc2: {
			range: {
				value: 0,
				range: [ -4, 2 ]
			},
			fineDetune: {
				value: 0,
				range: [ -8, 8 ]
			},
			waveform: {
				value: 0,
				range: [ 0, 5 ]
			}
		},
		osc3: {
			range: {
				value: -1,
				range: [ -4, 2 ]
			},
			fineDetune: {
				value: 0,
				range: [ -8, 8 ]
			},
			waveform: {
				value: 0,
				range: [ 0, 5 ]
			}
		}
	},
	DEFAULT_MIX_SETTINGS: {
		volume1: {
			enabled: {
				value: 1,
				range: [ 0, 1 ]
			},
			level: {
				value: 0.6,
				range: [ 0, 1 ]
			}
		},
		volume2: {
			enabled: {
				value: 0,
				range: [ 0, 1 ]
			},
			level: {
				value: 0.6,
				range: [ 0, 1 ]
			}
		},
		volume3: {
			enabled: {
				value: 0,
				range: [ 0, 1 ]
			},
			level: {
				value: 0.6,
				range: [ 0, 1 ]
			}
		}
	},
	DEFAULT_NOISE_SETTINGS: {
		enabled: {
			value: 0,
			range: [ 0, 1 ]
		},
		type: {
			value: 0,
			range: [ 0, 2 ]
		},
		level: {
			value: 0.2,
			range: [ 0, 1 ]
		}
	},
	DEFAULT_ENVELOPES_SETTINGS: {
		primary: {
			attack: {
				value: 0.5,
				range: [ 0, 2 ]
			},
			decay: {
				value: 0.5,
				range: [ 0.002, 2 ]
			},
			sustain: {
				value: 0.5,
				range: [ 0, 1 ]
			},
			release: {
				value: 0.1,
				range: [ 0, 2 ]
			}
		},
		filter: {
			attack: {
				value: 0.5,
				range: [ 0, 2 ]
			},
			decay: {
				value: 0.5,
				range: [ 0, 2 ]
			},
			sustain: {
				value: 0.5,
				range: [ 0.001, 1 ]
			},
			release: {
				value: 0.1,
				range: [ 0, 2 ]
			}
		}
	},
	DEFAULT_FILTER_SETTINGS: {
		cutoff: {
			value: 4000,
			range: [ 0, 8000 ]
		},
		emphasis: {
			value: 2,
			range: [ 0.4, 40 ]
		},
		envAmount: {
			value: 0,
			range: [ 0, 1 ]
		}
	},
	DEFAULT_LFO_SETTINGS: {
		waveform: {
			value: 0,
			range: [ 0, 5 ]
		},
		rate: {
			value: 3,
			range: [ 1, 25 ]
		},
		amount: {
			value: 0,
			range: [ 0, 1 ]
		}
	},

    FILTER_FREQUENCY_UPPER_BOUND: 8000,
	FILTER_FREQUENCY_LOWER_BOUND: 1,

	LFO_DEFAULT_RATE: 3,
	LFO_DEFAULT_FORM: "sine",
    LFO_DEFAULT_FREQUENCY_CENTER: 501,
	LFO_DEFAULT_FREQUENCY_RANGE: 500,

	MODULATION_LFO_FREQUENCY_RANGE: 30,


	FAKE_ZERO: 0.00001

};



/* the main engine from viktor-nv1-engine

*/

export function Synth( audioContext, config ) {
	var self = this,
		voices = [],
		voicesAvailable = [],
		voicesInUse = [],
		sustainedFrequencyVoiceMap = {},
		frequencyVoiceMap = {},
		outputNode = audioContext.createGain(),
		voiceCount = config && config.voiceCount ? config.voiceCount : CONST.DEFAULT_VOICE_COUNT;

	outputNode.gain.value = 1.0;

	self.audioContext = audioContext;
	self.voices = voices;
	self.voicesAvailable = voicesAvailable;
	self.voicesInUse = voicesInUse;
	self.frequencyVoiceMap = frequencyVoiceMap;
	self.sustainedFrequencyVoiceMap = sustainedFrequencyVoiceMap;
	self.outputNode = outputNode;
	self.activeNotes = [];
	self.transientPropNames = [
		"pitch",
		"modulation",
		"oscillator",
		"mixer",
		"noise",
		"envelopes",
		"filter",
		"lfo"
	];
	self.settings = {

		// own settings
		polyphony: null,

		// transient settings
		modulation: null,
		oscillator: null,
		mixer: null,
		noise: null,
		envelopes: null,
		filter: null,
		lfo: null,
		pitch: null

	};

	self._defineProps();

	self.modulationSettings = CONST.DEFAULT_MOD_SETTINGS;
	self.oscillatorSettings = CONST.DEFAULT_OSC_SETTINGS;
	self.mixerSettings = CONST.DEFAULT_MIX_SETTINGS;
	self.noiseSettings = CONST.DEFAULT_NOISE_SETTINGS;
	self.envelopesSettings = CONST.DEFAULT_ENVELOPES_SETTINGS;
	self.filterSettings = CONST.DEFAULT_FILTER_SETTINGS;
	self.lfoSettings = CONST.DEFAULT_LFO_SETTINGS;
	self.pitchSettings = CONST.DEFAULT_PITCH_SETTINGS;

	// should be init last because it should set transient settings to voices
	self.polyphonySettings = CONST.DEFAULT_POLYPHONY_SETTINGS;
}

Synth.prototype = {

	name: "synth",

	loadPatch: function( patch ) {
		var self = this,
			audioContext = self.audioContext,
			outputNode = self.outputNode;

		// lower volume so there is no glitches on param change
		outputNode.gain.setTargetAtTime( 0.01, audioContext.currentTime + 0.01, 0.01 );

		Object.keys( patch ).forEach( function( key ) {
			self[ key + "Settings" ] = patch[ key ];
		} );

		// bring volume back up
		outputNode.gain.setTargetAtTime( 1.0, audioContext.currentTime + 0.5, 1/2 );
	},

	getPatch: function() {
		var self = this;

		return self.settings;
	},

	onMidiMessage: function( eventType, parsed, rawEvent ) {
		var self = this,
			allVoices = self.voices,
			voicesInUse = self.voicesInUse;

		if ( eventType === "notePress" ) {
			var methodName = ( parsed.isNoteOn ) ? "onNoteOn" : "onNoteOff";

			self[ methodName ]( parsed.noteFrequency, parsed.velocity );
		} else if ( eventType === "sustain" ) {
			var polyphonySettings = self.polyphonySettings;

			polyphonySettings.sustain = parsed.sustain;

			self.polyphonySettings = polyphonySettings;
		} else {
			allVoices.forEach( function( voice ) {
				voice.onMidiMessage( eventType, parsed, rawEvent );
			} );
		}
	},

	onNoteOn: function( noteFrequency, velocity ) {
		var self = this,
			voicesInUse = self.voicesInUse,
			voicesAvailable = self.voicesAvailable,
			frequencyVoiceMap = self.frequencyVoiceMap,
			sustainedFrequencyVoiceMap = self.sustainedFrequencyVoiceMap,
			isSustainOn = self.settings.polyphony.sustain.value === 1;

		if ( frequencyVoiceMap[ noteFrequency ] ) {
			// if the voice is already ON, no need to restart it
			return;
		}

		var availableVoice = null;
		if ( isSustainOn && sustainedFrequencyVoiceMap[ noteFrequency ] ) {
			availableVoice = sustainedFrequencyVoiceMap[ noteFrequency ];

			var indexInVoicesAvailable = voicesAvailable.indexOf( availableVoice ),
				indexInVoicesInUse = voicesInUse.indexOf( availableVoice );

			if ( indexInVoicesAvailable !== -1 ) {
				voicesAvailable.splice( indexInVoicesAvailable, 1 );
			} else {
				voicesInUse.splice( indexInVoicesInUse, 1 );
			}

		} else if ( voicesAvailable.length ) {
			availableVoice = voicesAvailable.splice( 0, 1 )[ 0 ];
		} else {
			availableVoice = voicesInUse.splice( 0, 1 )[ 0 ];
		}

		var availableVoiceCurrentNote = availableVoice.getCurrentNote();
		if ( availableVoiceCurrentNote && isSustainOn && sustainedFrequencyVoiceMap[ availableVoiceCurrentNote ] ) {
			// if stealing a sustained voice
			delete sustainedFrequencyVoiceMap[ availableVoiceCurrentNote ];
		}

		voicesInUse.push( availableVoice );

		availableVoice.onNoteOn( noteFrequency, velocity );
		frequencyVoiceMap[ noteFrequency ] = availableVoice;
		if ( isSustainOn ) {
			sustainedFrequencyVoiceMap[ noteFrequency ] = availableVoice;
		}
	},

	onNoteOff: function( noteFrequency, velocity ) {
		var self = this,
			voicesInUse = self.voicesInUse,
			voicesAvailable = self.voicesAvailable,
			frequencyVoiceMap = self.frequencyVoiceMap,
			sustainedFrequencyVoiceMap = self.sustainedFrequencyVoiceMap,
			usedVoice = frequencyVoiceMap[ noteFrequency ],
			usedVoiceIndex = voicesInUse.indexOf( usedVoice );

		if ( !usedVoice ) {
			// if the voice is already OFF, no need to continue processing
			return;
		}

		usedVoice.onNoteOff( noteFrequency, velocity );
		delete frequencyVoiceMap[ noteFrequency ];

		if ( usedVoice.pressedNotes.length ) {
			delete sustainedFrequencyVoiceMap[ noteFrequency ];
		} else {
			voicesInUse.splice( usedVoiceIndex, 1 );
			voicesAvailable.push( usedVoice );
		}
	},

	_createVoices: function( n ) {
		var self = this,
			audioContext = self.audioContext,
			voices = self.voices,
			voicesAvailable = self.voicesAvailable,
			outputNode = self.outputNode,
			transientPropNames = self.transientPropNames,
			settingsLambda = function( setting ) {
				var settingName = setting + "Settings";

				voice[ settingName ] = self[ settingName ];
			};

		for ( var i = 0; i < n; i++ ) {
			var voice = new Voice( audioContext );

			voices.push( voice );
			voicesAvailable.push( voice );

			transientPropNames.forEach( settingsLambda );

			voice.outputNode.connect( outputNode );
		}
	},

	_dropVoices: function( n ) {
		var self = this,
			voices = self.voices,
			voicesAvailable = self.voicesAvailable,
			voicesInUse = self.voicesInUse,
			frequencyVoiceMap = self.frequencyVoiceMap,
			sustainedFrequencyVoiceMap = self.sustainedFrequencyVoiceMap;

		for ( var i = 0; i < n; i++ ) {
			var voice;
			if ( voicesAvailable.length ) {
				voice = voicesAvailable.splice( voicesAvailable.length - 1, 1 )[ 0 ];
			} else if ( voicesInUse.length ) {
				voice = voicesInUse.splice( voicesInUse.length - 1, 1 )[ 0 ];

				var currentNote = voice.getCurrentNote();

				delete frequencyVoiceMap[ currentNote ];
				delete sustainedFrequencyVoiceMap[ currentNote ];
			} else {
				// there is nothing to remove
				break;
			}

			var indexInVoices = voices.indexOf( voice );
			if ( indexInVoices !== -1 ) {
				voices.splice( indexInVoices, 1 );
			}

			voice.outputNode.disconnect();
		}
	},

	_defineProps: function() {
		var self = this,
			transientPropNames = self.transientPropNames;

		Object.defineProperty( self, "polyphonySettings", {

			get: function() {
				var self = this;

				return JSON.parse( JSON.stringify( self.settings.polyphony ) );
			},

			set: function( settings ) {
				var self = this,
					voices = self.voices,
					countDiff = settings.voiceCount.value - voices.length,
					isSustainOn = settings.sustain.value === 1;

				// voiceCount
				if ( countDiff > 0 ) {
					self._createVoices( countDiff );
				} else if ( countDiff < 0 ) {
					self._dropVoices( countDiff * ( -1 ) );
				}

				// sustain
				self.sustainedFrequencyVoiceMap = {};
				voices.forEach( function( voice ) {
					voice.setSustain( isSustainOn );
				} );

				self.settings.polyphony = JSON.parse( JSON.stringify( settings ) );
			}

		} );

		// define all transient properties to just pass to voices
		transientPropNames.forEach( function( settingName ) {

			( function( settingName ) {

				var propertyName = settingName + "Settings";

				Object.defineProperty( self, propertyName, {

					get: function() {
						var self = this;

						return JSON.parse( JSON.stringify( self.settings[ settingName ] ) );
					},

					set: function( settings ) {
						var self = this,
							voices = self.voices;

						voices.forEach( function( voice ) {
							voice[ propertyName ] = settings;
						} );

						self.settings[ settingName ] = JSON.parse( JSON.stringify( settings ) );
					}

				} );

			} )( settingName );

		} );
	}
}

var settingsConvertor = {
	transposeValue: function( value, originalRange, newRange ) {
		var originalRangeLenght = originalRange[ 1 ] - originalRange[ 0 ],
			ratioToRange = ( value - originalRange[ 0 ] ) / originalRangeLenght,
			newRangeLength = newRange[ 1 ] - newRange[ 0 ];

		return newRange[ 0 ] + ratioToRange * newRangeLength;
	},

	transposeParam: function( param, newRange ) {
		var self = this,
			newValue = self.transposeValue( param.value, param.range, newRange );

		return {
			value: newValue,
			range: newRange
		};
	},

	getRangeCenter: function( range ) {
		var rangeLength = range[ 1 ] - range[ 0 ];

		return range[ 0 ] + rangeLength / 2;
	}

};

function Voice( audioContext ) {
	var self = this,
		oscillatorBank = new OscillatorBank( audioContext, 3 ),
		waveformSource = new WaveformSource( audioContext, CONST.CUSTOM_WAVEFORMS ),
		noise = new Noise( audioContext ),
		gainEnvelope = new Envelope( audioContext, "gain", 1 ),
		gainEnvelopeNode = audioContext.createGain(),
		envelopeControlledFilter = new Filter( audioContext ),
		uiControlledFilter = new Filter( audioContext ),
		lfoControlledFilter = new Filter( audioContext ),

		envelopeFilterMix = new Mix( audioContext, uiControlledFilter.node, envelopeControlledFilter.node ),
		lfoFilterMix = new Mix( audioContext, envelopeFilterMix.output, lfoControlledFilter.node ),
		filterEnvelope = new Envelope( audioContext, "frequency", CONST.FILTER_FREQUENCY_UPPER_BOUND, CONST.FILTER_FREQUENCY_LOWER_BOUND ),
		filterLfo = new LFO( audioContext, [ lfoControlledFilter.node ], "frequency", {
			rate: CONST.LFO_DEFAULT_RATE,
			defaultForm: CONST.LFO_DEFAULT_FORM,
			centerFrequency: CONST.LFO_DEFAULT_FREQUENCY_CENTER,
			frequencyRange: CONST.LFO_DEFAULT_FREQUENCY_RANGE
		} ),
		masterVolume = audioContext.createGain();

	gainEnvelopeNode.gain.value = 0.0;
	gainEnvelope.node = gainEnvelopeNode;

	oscillatorBank.output.connect( gainEnvelope.node );
	noise.output.connect( gainEnvelope.node );

	filterEnvelope.node = envelopeControlledFilter.node;

	masterVolume.gain.value = 1.0;

	var modulationLfo = new LFO( audioContext, oscillatorBank.oscillators, "detune", {
		rate: 0,
		defaultForm: CONST.LFO_DEFAULT_FORM,
		frequencyRange: CONST.MODULATION_LFO_FREQUENCY_RANGE
	} );

	gainEnvelope.node.connect( envelopeControlledFilter.node );
	gainEnvelope.node.connect( uiControlledFilter.node );
	envelopeFilterMix.output.connect( lfoControlledFilter.node );
	lfoFilterMix.output.connect( masterVolume );

	self.audioContext = audioContext;
	self.modulationLfo = modulationLfo;
	self.oscillatorBank = oscillatorBank;
	self.waveformSource = waveformSource;
	self.noise = noise;
	self.gainEnvelope = gainEnvelope;
	self.envelopeControlledFilter = envelopeControlledFilter;
	self.uiControlledFilter = uiControlledFilter;
	self.lfoControlledFilter = lfoControlledFilter;
	self.envelopeFilterMix = envelopeFilterMix;
	self.filterLfo = filterLfo;
	self.lfoFilterMix = lfoFilterMix;
	self.filterEnvelope = filterEnvelope;
	self.outputNode = masterVolume;
	self.pressedNotes = [];
	self.sustainedNote = null;

	// non-setting properties
	self._isSustainOn = false;

	self.settings = {

		modulation: null,
		oscillator: null,
		mixer: null,
		noise: null,
		envelopes: null,
		filter: null,
		lfo: null,
		pitch: null

	};

	self._defineProps();
}

Voice.prototype = {

	loadPatch: function( patch ) {
		var self = this;

		Object.keys( patch ).forEach( function( key ) {
			self[ key + "Settings" ] = patch[ key ];
		} );
	},

	getPatch: function() {
		var self = this;

		return self.settings;
	},

	onMidiMessage: function( eventType, parsed, rawEvent ) {
		var self = this;

		if ( eventType === "notePress" ) {
			var methodName = ( parsed.isNoteOn ) ? "onNoteOn" : "onNoteOff";

			self[ methodName ]( parsed.noteFrequency, parsed.velocity );
		} else if ( eventType === "pitchBend" ) {
			self.onPitchBend( parsed.pitchBend );
		} else if ( eventType === "modulationWheel" ) {
			self.onModulationWheelTurn( parsed.modulation );
		}
	},

	onNoteOn: function( noteFrequency, velocity ) {
		var self = this,
			oscillatorBank = self.oscillatorBank,
			gainEnvelope = self.gainEnvelope,
			filterEnvelope = self.filterEnvelope,
			pressedNotes = self.pressedNotes,
			portamento = self.settings.modulation.portamento.value || CONST.FAKE_ZERO,
			pressedNotesCount = pressedNotes.length,
			hasANoteDown = pressedNotesCount > 0,
			pressedPosition = pressedNotes.indexOf( noteFrequency ),
			attackPeak = settingsConvertor.transposeValue(
				velocity,
				[ 0, 127 ],
				[ 0, 1 ]
			);

		if ( !hasANoteDown ) {
			self._pitchDetuneOscillatorBank( oscillatorBank, self.pitchSettings.bend.value );
		} else if ( pressedPosition === ( pressedNotesCount - 1 ) ) {
			// no need to restart sound if the same note is somehow input again
			return;
		}

		if ( pressedPosition !== -1 ) {
			pressedNotes.splice( pressedPosition, 1 );
		}

		pressedNotes.push( noteFrequency );

		oscillatorBank.note = {
			frequency: noteFrequency,
			portamento: portamento
		};

		gainEnvelope.start( attackPeak );
		filterEnvelope.start( attackPeak );

		if ( self._isSustainOn ) {
			self.sustainedNote = noteFrequency;
		}
	},

	onNoteOff: function( noteFrequency, velocity ) {
		var self = this,
			oscillatorBank = self.oscillatorBank,
			gainEnvelope = self.gainEnvelope,
			filterEnvelope = self.filterEnvelope,
			pressedNotes = self.pressedNotes,
			portamento = self.settings.modulation.portamento.value || CONST.FAKE_ZERO,
			position = pressedNotes.indexOf( noteFrequency );

		if ( position !== -1 ) {
			pressedNotes.splice( position, 1 );
		}

		if ( pressedNotes.length === 0 && !self._isSustainOn ) {
			gainEnvelope.end();
			filterEnvelope.end();
		} else if ( pressedNotes.length > 0 ) {
			noteFrequency = pressedNotes[ pressedNotes.length - 1 ];

			oscillatorBank.note = {
				frequency: noteFrequency,
				portamento: portamento
			};
		}
	},

	getCurrentNote: function() {
		var self = this,
			pressedNotes = self.pressedNotes,
			sustainedNote = self.sustainedNote;

		return pressedNotes[ pressedNotes.length - 1 ] || sustainedNote;
	},

	setSustain: function( isOn ) {
		var self = this,
			gainEnvelope = self.gainEnvelope,
			filterEnvelope = self.filterEnvelope,
			pressedNotes = self.pressedNotes;

		self._isSustainOn = isOn;

		if ( isOn ) {
			self.sustainedNote = self.getCurrentNote();
		} else {
			if ( !pressedNotes.length ) {
				gainEnvelope.end();
				filterEnvelope.end();
			}
			self.sustainedNote = null;
		}
	},

	onPitchBend: function( pitchBend ) {
		var self = this;

		self.pitchSettings = {
			bend: self.transposeParam( pitchBend, self.settings.pitch.bend.range )
		};
	},

	onModulationWheelTurn: function( modulation ) {
		var self = this,
			oldSettings = self.modulationSettings,
			newRate = modulation.value === 0 ?
				modulation
				:
				self.transposeParam( modulation, [ 3, 9 ] );

		if ( oldSettings.rate !== newRate ) {
			self.modulationSettings = {
				waveform: oldSettings.waveform,
				portamento: oldSettings.portamento,
				rate: newRate
			};
		}
	},

	_defineProps: function() {
		var self = this;

		Object.defineProperty( self, "pitchSettings", {

			get: function() {
				var self = this;

				return JSON.parse( JSON.stringify( self.settings.pitch ) );
			},

			set: function( settings ) {
				var self = this,
					oscillatorBank = self.oscillatorBank,
					oldSettings = self.settings.pitch || { bend: {} },
					hasANoteDown = self.pressedNotes.length > 0;

				if ( hasANoteDown && oldSettings.bend.value !== settings.bend.value ) {
					self._pitchDetuneOscillatorBank( oscillatorBank, settings.bend.value );
				}

				self.settings.pitch = JSON.parse( JSON.stringify( settings ) );
			}

		} );

		Object.defineProperty( self, "modulationSettings", {

			get: function() {
				// if slow - use npm clone
				return JSON.parse( JSON.stringify( self.settings.modulation ) );
			},

			set: function( settings ) {
				var waveformSource = self.waveformSource,
					oldSettings = self.settings.modulation,
					modulationLfo = self.modulationLfo;

				if ( !oldSettings || ( oldSettings.rate.value !== settings.rate.value ) ) {
					modulationLfo.rate = settings.rate.value;
				}

				if ( !oldSettings || ( oldSettings.waveform.value !== settings.waveform.value ) ) {
					var index = settings.waveform.value;

					modulationLfo.waveform = {
						defaultForm: waveformSource.defaultForms[ index ],
						customFormFFT: waveformSource.customForms[ CONST.OSC_WAVEFORM[ index ] ]
					};
				}

				self.settings.modulation = JSON.parse( JSON.stringify( settings ) );
			}

		} );

		Object.defineProperty( self, "oscillatorSettings", {

			get: function() {
				// if slow - use npm clone
				return JSON.parse( JSON.stringify( self.settings.oscillator ) );
			},

			set: function( settings ) {
				var oldSettings = self.settings.oscillator,
					oscillatorBank = self.oscillatorBank,
					waveformSource = self.waveformSource;

				oscillatorBank.forEach( function( osc, index ) {
					var propName = "osc" + ( index + 1 ),
						oldOscSettings = oldSettings && oldSettings[ propName ],
						newOscSettings = settings[ propName ];

					if ( !oldSettings || oldOscSettings.range.value !== newOscSettings.range.value ) {
						osc.octave = newOscSettings.range.value;
					}
					if ( !oldSettings || oldOscSettings.fineDetune.value !== newOscSettings.fineDetune.value ) {
						osc.cent = newOscSettings.fineDetune.value;
					}
					if ( !oldSettings || oldOscSettings.waveform.value !== newOscSettings.waveform.value ) {
						var waveform = newOscSettings.waveform.value,
							defaultForm = waveformSource.defaultForms[ waveform ];

						if ( defaultForm ) {
							osc.waveform = defaultForm;
						} else {
							osc.customWaveform = waveformSource.customForms[ CONST.OSC_WAVEFORM[ waveform ] ];
						}
					}

				} );

				self.settings.oscillator = JSON.parse( JSON.stringify( settings ) );
			}

		} );

		Object.defineProperty( self, "mixerSettings", {

			get: function() {
				// if slow - use npm clone
				return JSON.parse( JSON.stringify( self.settings.mixer ) );
			},

			set: function( settings ) {
				var oscillatorBank = self.oscillatorBank,
					oldSettings = self.settings.mixer;

				oscillatorBank.forEach( function( osc, index ) {
					var volumePropName = "volume" + ( index + 1 ),
						oldOscSettings = oldSettings && oldSettings[ volumePropName ],
						newOscSettings = settings[ volumePropName ];

					if ( !oldSettings || oldOscSettings.enabled.value !== newOscSettings.enabled.value ) {
						osc.enabled = newOscSettings.enabled.value ? true : false;
					}
					if ( !oldSettings || oldOscSettings.level.value !== newOscSettings.level.value ) {
						osc.level = newOscSettings.level.value;
					}
				} );

				self.settings.mixer = JSON.parse( JSON.stringify( settings ) );
			}

		} );

		Object.defineProperty( self, "noiseSettings", {

			get: function() {
				// if slow - use npm clone
				return JSON.parse( JSON.stringify( self.settings.noise ) );
			},

			set: function( settings ) {
				var oldSettings = self.settings.noise,
					noise = self.noise;

				if ( !oldSettings || oldSettings.enabled.value !== settings.enabled.value ) {
					noise.enabled = settings.enabled.value ? true : false;
				}
				if ( !oldSettings || oldSettings.level.value !== settings.level.value ) {
					noise.level = settings.level.value;
				}
				if ( !oldSettings || oldSettings.type.value !== settings.type.value ) {
					noise.type = settings.type.value;
				}

				self.settings.noise = JSON.parse( JSON.stringify( settings ) );
			}

		} );

		Object.defineProperty( self, "envelopesSettings", {

			get: function() {
				// if slow - use npm clone
				return JSON.parse( JSON.stringify( self.settings.envelopes ) );
			},

			set: function( settings ) {
				var oldSettings = self.settings.envelopes,
					resolve = function( oldSettings, settings, envelope ) {
						[
							"attack",
							"decay",
							"sustain",
							"release"
						].forEach( function( name ) {
							var newVal = settings[ name ];

							if ( !oldSettings || oldSettings[ name ].value !== newVal.value ) {
								envelope[ name ] = newVal.value;
							}
						} );
					};

				resolve( oldSettings && oldSettings.primary, settings.primary, self.gainEnvelope );
				resolve( oldSettings && oldSettings.filter, settings.filter, self.filterEnvelope );

				self.settings.envelopes = JSON.parse( JSON.stringify( settings ) );
			}

		} );

		Object.defineProperty( self, "filterSettings", {

			get: function() {
				// if slow - use npm clone
				return JSON.parse( JSON.stringify( self.settings.filter ) );
			},

			set: function( settings ) {
				var oldSettings = self.settings.filter,
					envelopeControlledFilter = self.envelopeControlledFilter,
					uiControlledFilter = self.uiControlledFilter,
					lfoControlledFilter = self.lfoControlledFilter,
					mix = self.envelopeFilterMix;

				if ( !oldSettings || oldSettings.cutoff.value !== settings.cutoff.value ) {
					var cutoff = settings.cutoff.value;

					envelopeControlledFilter.node.frequency.value = cutoff;
					uiControlledFilter.node.frequency.value = cutoff;
				}
				if ( !oldSettings || oldSettings.emphasis.value !== settings.emphasis.value ) {
					var emphasis = settings.emphasis.value;

					envelopeControlledFilter.node.Q.value = emphasis;
					uiControlledFilter.node.Q.value = emphasis;
					lfoControlledFilter.node.Q.value = emphasis;
				}
				if ( !oldSettings || oldSettings.envAmount.value !== settings.envAmount.value ) {
					mix.amount = settings.envAmount.value;
				}

				self.settings.filter = JSON.parse( JSON.stringify( settings ) );
			}

		} );

		Object.defineProperty( self, "lfoSettings", {

			get: function() {
				// if slow - use npm clone
				return JSON.parse( JSON.stringify( self.settings.lfo ) );
			},

			set: function( settings ) {
				var waveformSource = self.waveformSource,
					oldSettings = self.settings.lfo,
					filterLfo = self.filterLfo,
					mix = self.lfoFilterMix;

				if ( !oldSettings || oldSettings.rate.value !== settings.rate.value ) {
					filterLfo.rate = settings.rate.value;
				}
				if ( !oldSettings || oldSettings.waveform.value !== settings.waveform.value ) {
					var index = settings.waveform.value;

					filterLfo.waveform = {
						defaultForm: waveformSource.defaultForms[ index ],
						customFormFFT: waveformSource.customForms[ CONST.OSC_WAVEFORM[ index ] ]
					};
				}
				if ( !oldSettings || oldSettings.amount.value !== settings.amount.value ) {
					mix.amount = settings.amount.value;
				}

				self.settings.lfo = JSON.parse( JSON.stringify( settings ) );
			}

		} );
	},

	_pitchDetuneOscillatorBank: function( oscillatorBank, value ) {
		oscillatorBank.forEach( function( oscillatorSettings ) {
			oscillatorSettings.pitchBend = value;
		} );
	}

};

var DEFAULT_OSCILLATOR_COUNT = 3,
	SEMITONE_CENTS = 100,
	OCTAVE_CENTS = 12 * SEMITONE_CENTS;

function OscillatorBank( audioContext, count ) {
	var self = this,
		oscillators = [],
		volumes = [],
		output = audioContext.createGain(),
		currentTime = audioContext.currentTime;

	count = count || DEFAULT_OSCILLATOR_COUNT;

	output.gain.setValueAtTime( 1, currentTime );

	for ( var i = 0; i < count; i++ ) {
		var osc = audioContext.createOscillator(),
			volume = audioContext.createGain();

		volume.gain.value = 0.0;
		volume.connect( output );

		osc.frequency.setValueAtTime( 110, currentTime );
		osc.connect( volume );
		osc.start();

		volumes.push( volume );
		oscillators.push( osc );
	}

	self.audioContext = audioContext;
	self.oscillators = oscillators;
	self.volumes = volumes;
	self.output = output;

	self._defineProps();
}

OscillatorBank.prototype = {

	forEach: function( callback ) {
		var self = this;

		if ( !callback ) {
			return self;
		}

		for ( var i = 0; i < self.oscillators.length; i++ ) {
			callback( self[ "oscillator" + ( i + 1 ) ], i );
		}

		return self;
	},

	_defineProps: function() {

		var self = this,
			oscillators = self.oscillators,
			volumes = self.volumes,
			note;

		for ( var i = 0; i < oscillators.length; i++ ) {
			var oscillator = oscillators[ i ],
				volume = volumes[ i ],
				oscPropName = "oscillator" + ( i + 1 ),
				oscProp = self[ oscPropName ] = {};

			( function( osc, vol ) {
				var enabled = false, waveform = "sine", customWaveform, pitchBend = 0, cent = 0, semitone = 0, octave = 0, level = 100;

				Object.defineProperty( oscProp, "enabled", {

					get: function() {
						return enabled;
					},

					set: function( value ) {
						enabled = value;

						if ( enabled ) {
							osc.connect( vol );
						} else {
							osc.disconnect();
						}
					}

				} );

				Object.defineProperty( oscProp, "waveform", {

					get: function() {
						return waveform;
					},

					set: function( value ) {
						waveform = value;

						self._resolveWaveform( waveform, osc );
					}

				} );

				Object.defineProperty( oscProp, "customWaveform", {

					get: function() {
						return customWaveform;
					},

					set: function( value ) {
						customWaveform = value;

						self._resolveCustomWaveform( customWaveform, osc );
					}

				} );

				Object.defineProperty( oscProp, "pitchBend", {

					get: function() {
						return pitchBend;
					},

					set: function( value ) {
						pitchBend = value;

						self._resolveDetune( octave, semitone, cent, pitchBend, osc );
					}

				} );

				Object.defineProperty( oscProp, "cent", {

					get: function() {
						return cent;
					},

					set: function( value ) {
						cent = value;

						self._resolveDetune( octave, semitone, cent, pitchBend, osc );
					}

				} );

				Object.defineProperty( oscProp, "semitone", {

					get: function() {
						return semitone;
					},

					set: function( value ) {
						semitone = value;

						self._resolveDetune( octave, semitone, cent, pitchBend, osc );
					}

				} );

				Object.defineProperty( oscProp, "octave", {

					get: function() {
						return octave;
					},

					set: function( value ) {
						octave = value;

						self._resolveDetune( octave, semitone, cent, pitchBend, osc );
					}

				} );

				Object.defineProperty( oscProp, "level", {

					get: function() {
						return level;
					},

					set: function( value ) {
						level = value;

						vol.gain.setValueAtTime( level, self.audioContext.currentTime );
					}

				} );

			} )( oscillator, volume );
		}

		Object.defineProperty( self, "note", {

			get: function() {
				return note;
			},

			set: function( value ) {
				note = value;

				oscillators.forEach( function( osc ) {
					self._setNoteToOscillator( osc, note );
				} );
			}

		} );

	},

	_resolveWaveform: function( waveform, osc ) {
		if ( waveform ) {
			osc.type = waveform;
		}
	},

	_resolveCustomWaveform: function( waveTable, osc ) {
		if ( waveTable ) {
			osc.setPeriodicWave( waveTable );
		}
	},

	_setNoteToOscillator: function( oscillator, note ) {
		var self = this;

		oscillator.frequency.cancelScheduledValues( 0 );
		oscillator.frequency.setTargetAtTime(
			note.frequency,
			self.audioContext.currentTime,
			note.portamento
		);
	},

	_resolveDetune: function( octave, semitone, cent, pitchBend, oscillator ) {
		var self = this;

		oscillator.detune.setValueAtTime( octave * OCTAVE_CENTS + semitone * SEMITONE_CENTS + cent + pitchBend, self.audioContext.currentTime );
	}

};

function WaveformSource( audioContext, customForms ) {
	var self = this,
		customFormTables = {};

	if ( customForms && customForms.length ) {
		for ( var i = 0; i < customForms.length; i++ ) {
			var form = customForms[ i ],
				fft = form.fft,
				size = fft.real.length,
				real = new Float32Array( size ),
				imag = new Float32Array( size );

			for ( var k = 0; k < size; k++ ) {
				real[ k ] = fft.real[ k ];
				imag[ k ] = fft.imag[ k ];
			}

			customFormTables[ form.name ] = audioContext.createPeriodicWave( real, imag );
		}
	}

	self.customForms = customFormTables;
}

WaveformSource.prototype = {

	defaultForms: [
		"sine",
		"square",
		"sawtooth",
		"triangle",
	]

};

var NOISE_TYPE = [
		"brown",
		"pink",
		"white"
	],
	NOISE_BUFFER_SIZE = 4096;

function Noise( audioContext ) {
	var self = this,
		noiseVolume = audioContext.createGain(),
		sourceNode = audioContext.createScriptProcessor( NOISE_BUFFER_SIZE, 1, 1 );

	noiseVolume.gain.value = 0.0;
	sourceNode.connect( noiseVolume );

	self.volume = self.output = noiseVolume;
	self.sourceNode = sourceNode;
	self._defineProps();
}

Noise.prototype = {

	_defineProps: function() {

		var self = this,
			sourceNode = self.sourceNode,
			volumeNode = self.volume,
			enabled = false,
			level = 0,
			type = "brown";

		Object.defineProperty( self, "enabled", {

			get: function() {
				return enabled;
			},

			set: function( value ) {
				enabled = value;

				if ( enabled ) {
					sourceNode.connect( volumeNode );
				} else {
					sourceNode.disconnect();
				}
			}

		} );

		Object.defineProperty( self, "level", {

			get: function() {
				return level;
			},

			set: function( value ) {
				level = value;
				volumeNode.gain.value = level;
			}

		} );

		Object.defineProperty( self, "type", {

			get: function() {
				return type;
			},

			set: function( value ) {
				type = value;
				self._changeNoise( sourceNode, NOISE_TYPE[ type ] );
			}

		} );

	},

	_changeNoise: function( sourceNode, type ) {
		var self = this;

		sourceNode.onaudioprocess = self._getNoiseGenerator( type, NOISE_BUFFER_SIZE );
	},

	_getNoiseGenerator: function( type, bufferSize ) {
		// code copied from here:
		//		http://noisehack.com/generate-noise-web-audio-api/
		var generator;

		switch ( type ) {
			case "white":
				generator = function( e ) {
					var output = e.outputBuffer.getChannelData( 0 );
					for ( var i = 0; i < bufferSize; i++ ) {
						output[ i ] = Math.random() * 2 - 1;
					}
				};
				break;
			case "pink":
				generator = ( function() {
					var b0, b1, b2, b3, b4, b5, b6;
					b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;
					var result = function( e ) {
						var output = e.outputBuffer.getChannelData( 0 );
						for ( var i = 0; i < bufferSize; i++ ) {
							var white = Math.random() * 2 - 1;

							b0 = 0.99886 * b0 + white * 0.0555179;
							b1 = 0.99332 * b1 + white * 0.0750759;
							b2 = 0.96900 * b2 + white * 0.1538520;
							b3 = 0.86650 * b3 + white * 0.3104856;
							b4 = 0.55000 * b4 + white * 0.5329522;
							b5 = -0.7616 * b5 - white * 0.0168980;

							output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;
							output[i] *= 0.11; // (roughly) compensate for gain

							b6 = white * 0.115926;
						}
					};
					return result;
				} )();
				break;
			case "brown":
				generator = ( function() {
					var lastOut = 0.0;
					var result = function( e ) {
						var output = e.outputBuffer.getChannelData( 0 );
						for ( var i = 0; i < bufferSize; i++ ) {
							var white = Math.random() * 2 - 1;
							output[ i ] = ( lastOut + ( 0.02 * white ) ) / 1.02;
							lastOut = output[ i ];
							output[ i ] *= 3.5; // (roughly) compensate for gain
						}
					};
					return result;
				} )();
				break;
		}

		return generator;
	}

};


var ONE_MILLISECOND_IN_SECONDS = 0.001;

function customOrDefault( customValue, defaultValue ) {
	return customValue !== undefined ? customValue : defaultValue;
}


function Envelope( audioContext, propName, upperBound, lowerBound ) {
	var self = this;

	self.audioContext = audioContext;
	self.propName = propName;
	self.upperBound = upperBound;
	self.lowerBound = lowerBound || CONST.FAKE_ZERO;

	self.node = null;

	self.attack = self.decay = self.sustain = self.release = null;
}

Envelope.prototype = {

	start: function( upperBoundMultiplier, time ) {
		var self = this,
			audioContext = self.audioContext,
			propName = self.propName,
			upperBound = self.upperBound * upperBoundMultiplier,
			node = self.node,
			attack = self.attack || CONST.FAKE_ZERO,
			decay = self.decay || CONST.FAKE_ZERO,
			sustain = self.sustain;

		time = customOrDefault( time, audioContext.currentTime );

		node[ propName ].cancelScheduledValues( time );
		node[ propName ].setTargetAtTime( self.lowerBound, time, 0.01 );
		node[ propName ].setTargetAtTime( upperBound, time + 0.01, attack / 2 );
		node[ propName ].setTargetAtTime( sustain * upperBound, time + 0.01 + attack, decay / 2 );
	},

	end: function( time ) {
		var self = this,
			audioContext = self.audioContext,
			propName = self.propName,
			node = self.node,
			release = self.release || ONE_MILLISECOND_IN_SECONDS;

		time = customOrDefault( time, audioContext.currentTime );

		node[ propName ].cancelScheduledValues( time );
		node[ propName ].setTargetAtTime( self.lowerBound, time, release );
	}

};


function Filter( audioContext ) {
	var self = this,
		node = audioContext.createBiquadFilter();

	node.type = "lowpass";

	self.node = node;
}

var DEFAULT_FREQUENCY_RANGE = 500;

function LFO( audioContext, controlledNodes, propName, settings ) {
	var self = this,
		oscillator = audioContext.createOscillator(),
		gain = audioContext.createGain();

	if ( !settings || settings.rate === undefined || !( settings.defaultForm || settings.customFormFFT ) ) {
		throw new Error( "Bad settings." );
	}

	self.propName = propName;
	self.controlledNodes = controlledNodes;
	self.settings = settings;
	self.audioContext = audioContext;
	self.oscillator = oscillator;
	self.gain = gain;

	self._defineProps();

	self.rate = settings.rate;
	self.waveform = settings;

	self._initCenterFrequency();
	self._initFrequencyRange();

	oscillator.connect( gain );
	controlledNodes.forEach( function( node ) {
		gain.connect( node[ propName ] );
	} );

	oscillator.start( 0 );
}

LFO.prototype = {

	_defineProps: function() {
		var self = this;

		Object.defineProperty( self, "rate", {
			set: function( value ) {
				var self = this,
					gain = self.gain;

				if ( value === 0 ) {
					gain.gain.value = 0;
				} else if ( gain.gain.value === 0 ) {
					self._initFrequencyRange();
				}

				self.oscillator.frequency.value = value;
			}
		} );

		Object.defineProperty( self, "waveform", {
			set: function( value ) {
				var self = this,
					oscillator = self.oscillator,
					defaultForm = value.defaultForm,
					waveTable = value.customFormFFT;

				if ( defaultForm ) {
					oscillator.type = defaultForm;
				} else {
					oscillator.setPeriodicWave( waveTable );
				}
			}
		} );
	},

	_initCenterFrequency: function() {
		var self = this,
			controlledNodes = self.controlledNodes,
			settings = self.settings,
			propName = self.propName;

		if ( settings.centerFrequency ) {
			controlledNodes.forEach( function( node ) {
				node[ propName ].value = settings.centerFrequency;
			} );
		}
	},

	_initFrequencyRange: function() {
		var self = this,
			gain = self.gain,
			settings = self.settings;

		gain.gain.value = settings.frequencyRange ?
			settings.frequencyRange : DEFAULT_FREQUENCY_RANGE;
	}

};

function Mix( audioContext, firstMixNode, secondMixNode ) {
	var self = this,
		firstGain = audioContext.createGain(),
		secondGain = audioContext.createGain(),
		output = audioContext.createGain();

	firstGain.gain.value = 1.0;
	secondGain.gain.value = 0;
	output.gain.value = 1.0;

	firstMixNode.connect( firstGain );
	secondMixNode.connect( secondGain );

	firstGain.connect( output );
	secondGain.connect( output );

	Object.defineProperty( self, "amount", {
		get: function() {
			var self = this;

			return self.secondGain.gain.value;
		},

		set: function( value ) {
			var self = this;
			self.secondGain.gain.value = value;
			self.firstGain.gain.value = 1 - value;
		}
	} );

	self.firstGain = firstGain;
	self.secondGain = secondGain;
	self.output = output;
}


var	ENGINE_VERSION_1 = 1,
	ENGINE_VERSION_2 = 2,
	ENGINE_VERSION_3 = 3,
	ENGINE_VERSION_4 = 4,
	ENGINE_VERSION_5 = 5,
	ENGINE_VERSION_6 = 6,
	CURRENT_ENGINE_VERSION = "ENGINE_VERSION_" + CONST.ENGINE_VERSION;

export var patchLoader = {

	load: function( patch ) {
		var self = this,
			currentVersion = self._getVersion( patch ),
			alteredPatch = JSON.parse( JSON.stringify( patch ) ); // clone

		switch( currentVersion ) {

			case ENGINE_VERSION_1:
				alteredPatch = self._loadVersion1Patch( alteredPatch );
				break;

			case ENGINE_VERSION_2:
				alteredPatch = self._loadVersion2Patch( alteredPatch );
				break;

			case ENGINE_VERSION_3:
				alteredPatch = self._loadVersion3Patch( alteredPatch );
				break;

			case ENGINE_VERSION_4:
				alteredPatch = self._loadVersion4Patch( alteredPatch );
				break;

			case ENGINE_VERSION_5:
				alteredPatch = self._loadVersion5Patch( alteredPatch );
				break;

			case ENGINE_VERSION_6:
				alteredPatch = self._loadVersion6Patch( alteredPatch );
				break;

			default:
				break; // will return null

		}

		return alteredPatch;
	},

	prepareForSerialization: function( patch ) {
		var self = this;

		// strip ranges
		self._iterateTrees( patch, null, function( node, key ) {
			var prop = node[ key ],
				isLeaf = ( prop && prop.range && prop.range.length && prop.range.length === 2 && prop.value !== undefined );

			if ( isLeaf ) {
				node[ key ] = prop.value;
			}

			return isLeaf;
		} );
	},

	_getVersion: function( patch ) {
		var version = 1;
		if ( patch.version ) {
			version = patch.version;
		}

		return version;
	},

	_loadVersion1Patch: function( patch ) {
		var self = this,
			newRangeLibrary = CONST.RANGE_LIBRARY[ CURRENT_ENGINE_VERSION ];

		self._defaultPatchToMonosynth( patch );
		self._defaultPatchToNoCompression( patch );
		self._transposeRanges( patch, newRangeLibrary );

		return patch;
	},

	_loadVersion2Patch: function( patch ) {
		var self = this,
			rangeLibrary = CONST.RANGE_LIBRARY.ENGINE_VERSION_2,
			newRangeLibrary = CONST.RANGE_LIBRARY[ CURRENT_ENGINE_VERSION ];

		self._defaultPatchToMonosynth( patch );
		self._defaultPatchToNoCompression( patch );
		self._applyRange( patch, rangeLibrary );

		// if the current version of the engine is newer
		if ( rangeLibrary !== newRangeLibrary ) {
			self._transposeRanges( patch, newRangeLibrary );
		}

		return patch;
	},

	_loadVersion3Patch: function( patch ) {
		var self = this,
			rangeLibrary = CONST.RANGE_LIBRARY.ENGINE_VERSION_3,
			newRangeLibrary = CONST.RANGE_LIBRARY[ CURRENT_ENGINE_VERSION ];

		patch.instruments.synth.polyphony.sustain = {
			value: 0,
			range: newRangeLibrary.instruments.synth.polyphony.sustain
		};
		self._defaultPatchToNoCompression( patch );

		self._applyRange( patch, rangeLibrary );

		// if the current version of the engine is newer
		if ( rangeLibrary !== newRangeLibrary ) {
			self._transposeRanges( patch, newRangeLibrary );
		}

		return patch;
	},

	_loadVersion4Patch: function( patch ) {
		var self = this,
			rangeLibrary = CONST.RANGE_LIBRARY.ENGINE_VERSION_4,
			newRangeLibrary = CONST.RANGE_LIBRARY[ CURRENT_ENGINE_VERSION ];

		self._defaultPatchToNoCompression( patch );
		self._applyRange( patch, rangeLibrary );

		// if the current version of the engine is newer
		if ( rangeLibrary !== newRangeLibrary ) {
			self._transposeRanges( patch, newRangeLibrary );
		}

		return patch;
	},

	_loadVersion5Patch: function( patch ) {
		var self = this,
			rangeLibrary = CONST.RANGE_LIBRARY.ENGINE_VERSION_5,
			newRangeLibrary = CONST.RANGE_LIBRARY[ CURRENT_ENGINE_VERSION ];

		self._defaultPatchToNoCompression( patch );
		self._applyRange( patch, rangeLibrary );

		// if the current version of the engine is newer
		if ( rangeLibrary !== newRangeLibrary ) {
			self._transposeRanges( patch, newRangeLibrary );
		}

		return patch;
	},

	_loadVersion6Patch: function( patch ) {
		var self = this,
			rangeLibrary = CONST.RANGE_LIBRARY.ENGINE_VERSION_6,
			newRangeLibrary = CONST.RANGE_LIBRARY[ CURRENT_ENGINE_VERSION ];

		self._applyRange( patch, rangeLibrary );

		// if the current version of the engine is newer
		if ( rangeLibrary !== newRangeLibrary ) {
			self._transposeRanges( patch, newRangeLibrary );
		}

		return patch;
	},

	_defaultPatchToMonosynth: function( patch ) {
		var latestRangeLibrary = CONST.RANGE_LIBRARY[ CURRENT_ENGINE_VERSION ];

		patch.instruments.synth.polyphony = {
			voiceCount: {
				value: 1,
				range: latestRangeLibrary.instruments.synth.polyphony.voiceCount
			},
			sustain: {
				value: 0,
				range: latestRangeLibrary.instruments.synth.polyphony.sustain
			}
		};
	},

	_defaultPatchToNoCompression: function( patch ) {
		patch.daw.compressor = CONST.DEFAULT_COMPRESSOR_SETTINGS;
	},

	_transposeRanges: function( patch, rangeLibrary ) {
		var self = this;

		self._iterateTrees( patch, rangeLibrary, function( node, key, rangeProp ) {
			var prop = node[ key ],
				isLeaf = ( prop && prop.range && prop.range.length && prop.range.length === 2 && prop.value !== undefined &&
					rangeProp && rangeProp.length && rangeProp.length === 2 );

			if ( isLeaf ) {
				node[ key ] = settingsConvertor.transposeParam( prop, rangeProp );
			}

			return isLeaf;
		} );
	},

	_applyRange: function( patch, rangeLibrary ) {
		var self = this;

		self._iterateTrees( patch, rangeLibrary, function( node, key, rangeProp ) {
			var prop = node[ key ],
				isLeaf = ( rangeProp && rangeProp instanceof Array && rangeProp.length === 2 );

			if ( isLeaf ) {
				// if there is no such prop on the patch (introduced in newer engine version)
				if ( prop === undefined ) {
					// set to the range center
					prop = settingsConvertor.getRangeCenter( rangeProp );
				}
				node[ key ] = { value: prop, range: rangeProp };
			}

			return isLeaf;
		} );
	},

	_iterateTrees: function( node, matchingNode, isLeafLambda ) {
		var self = this;

		//mgh this is to avoid doing something fancy here with the fx node I made
		if (node == null) {
			return
		}

		Object.keys( node ).forEach( function( key ) {
			var prop = node[ key ],
				matchingProp = matchingNode && matchingNode[ key ],
				isObject = ( "object" === typeof( prop ) );

			if ( !isLeafLambda( node, key, matchingProp ) && isObject ) {
				self._iterateTrees( prop, matchingProp, isLeafLambda );
			}
		} );
	}

};
